Filename: DEFINITIONS.LOG

The list of all definitions identified in the test-project project.

DEFINITION>
    :Name #:USER-PKG
    :Context (DEFPACKAGE #:USER-PKG
               (:USE :CL))
    :Type :PACKAGE
    :File /src/defs.lisp

DEFINITION>
    :Name *SPECIAL1*
    :Context (DEFVAR *SPECIAL1* 0)
    :Type :VARIABLE
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name *SPECIAL2*
    :Context (DEFVAR *SPECIAL2* "Special variable without initialization")
    :Type :VARIABLE
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name *PARAM1*
    :Context (DEFPARAMETER *PARAM1* 100 "Parameter must have initial value")
    :Type :VARIABLE
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name +CONST1+
    :Context (DEFCONSTANT +CONST1+ 1 "Constants use plus signs")
    :Type :VARIABLE
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name VAR1
    :Context (SETF (SYMBOL-VALUE 'VAR1) 42)
    :Type :VARIABLE
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name #:TEST1-PKG
    :Context (DEFPACKAGE #:TEST1-PKG
               (:NICKNAMES :T1PKG)
               (:USE :CL)
               (:EXPORT #:VAR1 #:PARAM1 #:+CONST1+ #:*SPECIAL1*))
    :Type :PACKAGE
    :File /src/defs.lisp

DEFINITION>
    :Name :T1PKG
    :Context (DEFPACKAGE #:TEST1-PKG
               (:NICKNAMES :T1PKG)
               (:USE :CL)
               (:EXPORT #:VAR1 #:PARAM1 #:+CONST1+ #:*SPECIAL1*))
    :Type :PACKAGE
    :File /src/defs.lisp

DEFINITION>
    :Name :TEST2-PKG
    :Context (MAKE-PACKAGE :TEST2-PKG :NICKNAMES '("T2PKG") :USE
                           '("COMMON-LISP"))
    :Type :PACKAGE
    :File /src/defs.lisp

DEFINITION>
    :Name "T2PKG"
    :Context (MAKE-PACKAGE :TEST2-PKG :NICKNAMES '("T2PKG") :USE
                           '("COMMON-LISP"))
    :Type :PACKAGE
    :File /src/defs.lisp

DEFINITION>
    :Name FN1
    :Context (DEFUN FN1 (X) X)
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name (SETF FN1)
    :Context (DEFUN (SETF FN1) (NEW-VAL X) (SETF (CAR X) NEW-VAL))
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name FN2A
    :Context (DEFUN FN2A (X &OPTIONAL Y) (DECLARE (TYPE NUMBER X)) (LIST X Y))
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name FN2B
    :Context (DEFUN FN2B (X &KEY Z) (DECLARE (TYPE NUMBER X)) (LIST X Z))
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name MY-COMB
    :Context (DEFINE-METHOD-COMBINATION MY-COMB
               (&KEY (ORDER :MOST-SPECIFIC-FIRST))
               ((METHODS *))
               `(PROGN
                 ,(CASE ORDER
                    (:MOST-SPECIFIC-FIRST `(CALL-METHOD ,#))
                    (:MOST-SPECIFIC-LAST `(CALL-METHOD ,#)))))
    :Type :METHOD-COMBINATION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name FN3
    :Context (SETF (SYMBOL-FUNCTION 'FN3) #'(LAMBDA (X) (* X 2)))
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name WITH-TEST
    :Context (DEFMACRO WITH-TEST ((VAR) &BODY BODY)
               `(LET ((,VAR T))
                  ,@BODY))
    :Type :MACRO
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name INCF-BY
    :Context (DEFINE-MODIFY-MACRO INCF-BY (N) +)
    :Type :MACRO
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name MY-PLUS
    :Context (DEFINE-COMPILER-MACRO MY-PLUS
                 (&WHOLE FORM A B)
               (IF (AND (NUMBERP A) (NUMBERP B))
                   (+ A B)
                   FORM))
    :Type :MACRO
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name MY-MACRO
    :Context (SETF (MACRO-FUNCTION 'MY-MACRO)
                     #'(LAMBDA (FORM ENV)
                         (DECLARE (IGNORE ENV))
                         `(LIST ,(SECOND FORM))))
    :Type :MACRO
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name GF1
    :Context (DEFGENERIC GF1
                 (X)
               (:DOCUMENTATION "Basic generic function"))
    :Type :GENERIC-FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name GF2
    :Context (DEFGENERIC GF2
                 (X Y)
               (:DOCUMENTATION "Generic function with multiple arguments")
               (:METHOD-COMBINATION STANDARD)
               (:GENERIC-FUNCTION-CLASS STANDARD-GENERIC-FUNCTION))
    :Type :GENERIC-FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name (SETF GF3)
    :Context (DEFGENERIC (SETF GF3)
                 (NEW-VALUE OBJ)
               (:DOCUMENTATION "Setf generic function"))
    :Type :GENERIC-FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name GF1
    :Context (DEFMETHOD GF1 ((X NUMBER)) (* X 2))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (NUMBER)

DEFINITION>
    :Name GF1
    :Context (DEFMETHOD GF1 ((X STRING)) (CONCATENATE 'STRING X X))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (STRING)

DEFINITION>
    :Name GF2
    :Context (DEFMETHOD GF2 :BEFORE ((X NUMBER) Y) (CHECK-TYPE Y NUMBER))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Qualifiers (:BEFORE)
    :Specializers (NUMBER T)

DEFINITION>
    :Name (SETF GF3)
    :Context (DEFMETHOD (SETF GF3) :AROUND (NEW-VALUE (OBJ CONS))
               (IF (NUMBERP NEW-VALUE)
                   (CALL-NEXT-METHOD)
                   (ERROR "Invalid value")))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Qualifiers (:AROUND)
    :Specializers (T CONS)

DEFINITION>
    :Name TODAY
    :Context (DEFINE-SYMBOL-MACRO TODAY (GET-UNIVERSAL-TIME))
    :Type :SYMBOL-MACRO
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name PI/2
    :Context (DEFINE-SYMBOL-MACRO PI/2 (/ PI 2))
    :Type :SYMBOL-MACRO
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name EMPTY-LIST
    :Context (DEFINE-SYMBOL-MACRO EMPTY-LIST NIL)
    :Type :SYMBOL-MACRO
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name POS-INTEGER
    :Context (DEFTYPE POS-INTEGER () '(INTEGER 1 *))
    :Type :DEFTYPE
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name SIZED-VECTOR
    :Context (DEFTYPE SIZED-VECTOR (ELEMENT-TYPE SIZE)
               `(VECTOR ,ELEMENT-TYPE ,SIZE))
    :Type :DEFTYPE
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name STRING-OR-SYMBOL
    :Context (DEFTYPE STRING-OR-SYMBOL () '(OR STRING SYMBOL))
    :Type :DEFTYPE
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name POINT
    :Context (DEFSTRUCT (POINT (:CONSTRUCTOR MAKE-POINT (X Y)))
               (X 0 :TYPE NUMBER)
               (Y 0 :TYPE NUMBER))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name POINT-X
    :Context (DEFSTRUCT (POINT (:CONSTRUCTOR MAKE-POINT (X Y)))
               (X 0 :TYPE NUMBER)
               (Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name POINT-Y
    :Context (DEFSTRUCT (POINT (:CONSTRUCTOR MAKE-POINT (X Y)))
               (X 0 :TYPE NUMBER)
               (Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name MAKE-POINT
    :Context (DEFSTRUCT (POINT (:CONSTRUCTOR MAKE-POINT (X Y)))
               (X 0 :TYPE NUMBER)
               (Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name COPY-POINT
    :Context (DEFSTRUCT (POINT (:CONSTRUCTOR MAKE-POINT (X Y)))
               (X 0 :TYPE NUMBER)
               (Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name POINT-P
    :Context (DEFSTRUCT (POINT (:CONSTRUCTOR MAKE-POINT (X Y)))
               (X 0 :TYPE NUMBER)
               (Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name NAMED-POINT
    :Context (DEFCLASS NAMED-POINT NIL
                       ((NAME :INITARG :NAME :ACCESSOR POINT-NAME)
                        (U :INITARG :U :ACCESSOR POINT-U)
                        (V :INITARG :V :ACCESSOR POINT-V)))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name POINT-NAME
    :Context (DEFCLASS NAMED-POINT NIL
                       ((NAME :INITARG :NAME :ACCESSOR POINT-NAME)
                        (U :INITARG :U :ACCESSOR POINT-U)
                        (V :INITARG :V :ACCESSOR POINT-V)))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (NAMED-POINT)

DEFINITION>
    :Name (SETF POINT-NAME)
    :Context (DEFCLASS NAMED-POINT NIL
                       ((NAME :INITARG :NAME :ACCESSOR POINT-NAME)
                        (U :INITARG :U :ACCESSOR POINT-U)
                        (V :INITARG :V :ACCESSOR POINT-V)))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (NAMED-POINT)

DEFINITION>
    :Name POINT-U
    :Context (DEFCLASS NAMED-POINT NIL
                       ((NAME :INITARG :NAME :ACCESSOR POINT-NAME)
                        (U :INITARG :U :ACCESSOR POINT-U)
                        (V :INITARG :V :ACCESSOR POINT-V)))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (NAMED-POINT)

DEFINITION>
    :Name (SETF POINT-U)
    :Context (DEFCLASS NAMED-POINT NIL
                       ((NAME :INITARG :NAME :ACCESSOR POINT-NAME)
                        (U :INITARG :U :ACCESSOR POINT-U)
                        (V :INITARG :V :ACCESSOR POINT-V)))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (NAMED-POINT)

DEFINITION>
    :Name POINT-V
    :Context (DEFCLASS NAMED-POINT NIL
                       ((NAME :INITARG :NAME :ACCESSOR POINT-NAME)
                        (U :INITARG :U :ACCESSOR POINT-U)
                        (V :INITARG :V :ACCESSOR POINT-V)))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (NAMED-POINT)

DEFINITION>
    :Name (SETF POINT-V)
    :Context (DEFCLASS NAMED-POINT NIL
                       ((NAME :INITARG :NAME :ACCESSOR POINT-NAME)
                        (U :INITARG :U :ACCESSOR POINT-U)
                        (V :INITARG :V :ACCESSOR POINT-V)))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (NAMED-POINT)

DEFINITION>
    :Name INVALID-POINT
    :Context (DEFINE-CONDITION INVALID-POINT
                 (ERROR)
                 ((REASON :INITARG :REASON :READER POINT-ERROR-REASON)
                  (VALUE :INITARG :VALUE :READER POINT-ERROR-VALUE)))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name POINT-ERROR-REASON
    :Context (DEFINE-CONDITION INVALID-POINT
                 (ERROR)
                 ((REASON :INITARG :REASON :READER POINT-ERROR-REASON)
                  (VALUE :INITARG :VALUE :READER POINT-ERROR-VALUE)))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (INVALID-POINT)

DEFINITION>
    :Name POINT-ERROR-VALUE
    :Context (DEFINE-CONDITION INVALID-POINT
                 (ERROR)
                 ((REASON :INITARG :REASON :READER POINT-ERROR-REASON)
                  (VALUE :INITARG :VALUE :READER POINT-ERROR-VALUE)))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (INVALID-POINT)

DEFINITION>
    :Name *EMBEDDED-COUNT*
    :Context (DEFVAR *EMBEDDED-COUNT* 0 "Counter for embedded functions")
    :Type :VARIABLE
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name *LAST-EMBEDDED-POINT*
    :Context (DEFVAR *LAST-EMBEDDED-POINT* NIL "Storage for last point object")
    :Type :VARIABLE
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name SETUP-EMBEDDED-FUNCTIONS
    :Context (DEFUN SETUP-EMBEDDED-FUNCTIONS ()
               (DEFUN RESET-EMBEDDED-COUNT () (SETF *EMBEDDED-COUNT* 0))
               (DEFUN GET-EMBEDDED-COUNT () *EMBEDDED-COUNT*)
               (VALUES #'RESET-EMBEDDED-COUNT #'GET-EMBEDDED-COUNT))
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name RESET-EMBEDDED-COUNT
    :Context (DEFUN RESET-EMBEDDED-COUNT () (SETF *EMBEDDED-COUNT* 0))
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name GET-EMBEDDED-COUNT
    :Context (DEFUN GET-EMBEDDED-COUNT () *EMBEDDED-COUNT*)
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name MONITORED-POINT
    :Context (DEFCLASS MONITORED-POINT (NAMED-POINT)
                       ((TIMESTAMP :INITFORM (GET-UNIVERSAL-TIME) :READER
                         POINT-TIMESTAMP)))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name POINT-TIMESTAMP
    :Context (DEFCLASS MONITORED-POINT (NAMED-POINT)
                       ((TIMESTAMP :INITFORM (GET-UNIVERSAL-TIME) :READER
                         POINT-TIMESTAMP)))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (MONITORED-POINT)

DEFINITION>
    :Name SHARED-INITIALIZE
    :Context (DEFMETHOD SHARED-INITIALIZE :AFTER
                        ((POINT MONITORED-POINT) SLOT-NAMES &KEY)
               (SETF *LAST-EMBEDDED-POINT* POINT)
               (UNLESS (FBOUNDP 'GET-LAST-POINT-TIMESTAMP)
                 (DEFUN GET-LAST-POINT-TIMESTAMP ()
                   (WHEN *LAST-EMBEDDED-POINT*
                     (POINT-TIMESTAMP *LAST-EMBEDDED-POINT*)))))
    :Type :METHOD
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INHERITED
    :Qualifiers (:AFTER)
    :Specializers (MONITORED-POINT T)

DEFINITION>
    :Name GET-LAST-POINT-TIMESTAMP
    :Context (DEFUN GET-LAST-POINT-TIMESTAMP ()
               (WHEN *LAST-EMBEDDED-POINT*
                 (POINT-TIMESTAMP *LAST-EMBEDDED-POINT*)))
    :Type :FUNCTION
    :File /src/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

