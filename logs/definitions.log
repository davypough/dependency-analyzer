Filename: DEFINITIONS.LOG

The list of all definitions identified in the dependency-analyzer-test project.

DEFINITION>
    :Name #:USER-PKG
    :Context (DEFPACKAGE #:USER-PKG
               (:USE :CL :ALEXANDRIA))
    :Type :PACKAGE
    :File /test/defs.lisp

DEFINITION>
    :Name USER-PKG::*SPECIAL1*
    :Context (DEFPARAMETER USER-PKG::*SPECIAL1* 0)
    :Type :VARIABLE
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::*SPECIAL1*
    :Context (DEFVAR USER-PKG::*SPECIAL1* 0)
    :Type :VARIABLE
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::*SPECIAL2*
    :Context (DEFVAR USER-PKG::*SPECIAL2*
               "Special variable without initialization")
    :Type :VARIABLE
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::*PARAM1*
    :Context (SETF (SYMBOL-VALUE 'USER-PKG::*PARAM1*) 101)
    :Type :VARIABLE
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::*PARAM1*
    :Context (DEFPARAMETER USER-PKG::*PARAM1*
               100
               "Parameter must have initial value")
    :Type :VARIABLE
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::+CONST1+
    :Context (DEFCONSTANT USER-PKG::+CONST1+ 1)
    :Type :VARIABLE
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::+CONST1+
    :Context (DEFCONSTANT USER-PKG::+CONST1+ 1 "Constants use plus signs")
    :Type :VARIABLE
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::VAR1
    :Context (SETF (SYMBOL-VALUE 'USER-PKG::VAR1) 42)
    :Type :VARIABLE
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::*PARAM2*
    :Context (DEFPARAMETER USER-PKG::*PARAM2*
               (DEFPARAMETER USER-PKG::*PARAM3* 0)
               "Embedded definition")
    :Type :VARIABLE
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::*PARAM3*
    :Context (DEFPARAMETER USER-PKG::*PARAM3* 0)
    :Type :VARIABLE
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name #:TEST1-PKG
    :Context (DEFPACKAGE #:TEST1-PKG
               (:NICKNAMES :T1PKG)
               (:USE :CL)
               (:EXPORT #:VAR1 #:PARAM1 #:+CONST1+ #:*SPECIAL1*))
    :Type :PACKAGE
    :File /test/defs.lisp

DEFINITION>
    :Name :T1PKG
    :Context (DEFPACKAGE #:TEST1-PKG
               (:NICKNAMES :T1PKG)
               (:USE :CL)
               (:EXPORT #:VAR1 #:PARAM1 #:+CONST1+ #:*SPECIAL1*))
    :Type :PACKAGE
    :File /test/defs.lisp

DEFINITION>
    :Name :TEST2-PKG
    :Context (MAKE-PACKAGE :TEST2-PKG :NICKNAMES '("T2PKG") :USE
                           '("COMMON-LISP"))
    :Type :PACKAGE
    :File /test/defs.lisp

DEFINITION>
    :Name "T2PKG"
    :Context (MAKE-PACKAGE :TEST2-PKG :NICKNAMES '("T2PKG") :USE
                           '("COMMON-LISP"))
    :Type :PACKAGE
    :File /test/defs.lisp

DEFINITION>
    :Name #:TEST3-PKG
    :Context (DEFPACKAGE #:TEST3-PKG
               (:NICKNAMES :T3PKG)
               (:USE :CL :ALEXANDRIA)
               (:DOCUMENTATION "Demonstrates import-from packages")
               (:IMPORT-FROM #:TEST1-PKG #:VAR1 #:PARAM1)
               (:EXPORT #:VAR1 #:PROCESS-DATA))
    :Type :PACKAGE
    :File /test/defs.lisp

DEFINITION>
    :Name :T3PKG
    :Context (DEFPACKAGE #:TEST3-PKG
               (:NICKNAMES :T3PKG)
               (:USE :CL :ALEXANDRIA)
               (:DOCUMENTATION "Demonstrates import-from packages")
               (:IMPORT-FROM #:TEST1-PKG #:VAR1 #:PARAM1)
               (:EXPORT #:VAR1 #:PROCESS-DATA))
    :Type :PACKAGE
    :File /test/defs.lisp

DEFINITION>
    :Name #:TEST4-PKG
    :Context (DEFPACKAGE #:TEST4-PKG
               (:USE :CL :TEST1-PKG)
               (:SHADOW #:VAR1)
               (:SHADOWING-IMPORT-FROM :ALEXANDRIA #:WHEN-LET)
               (:EXPORT #:SHADOW-TEST))
    :Type :PACKAGE
    :File /test/defs.lisp

DEFINITION>
    :Name #:TEST5-PKG
    :Context (DEFPACKAGE #:TEST5-PKG
               (:USE :CL)
               (:INTERN #:INTERNAL-ONLY)
               (:EXPORT #:PUBLIC-API)
               (:DOCUMENTATION "Package for testing comprehensive symbol visibility analysis"))
    :Type :PACKAGE
    :File /test/defs.lisp

DEFINITION>
    :Name #:RUNTIME-PKG-A
    :Context (DEFPACKAGE #:RUNTIME-PKG-A
               (:USE :CL))
    :Type :PACKAGE
    :File /test/defs.lisp

DEFINITION>
    :Name #:RUNTIME-PKG-B
    :Context (DEFPACKAGE #:RUNTIME-PKG-B
               (:USE :CL))
    :Type :PACKAGE
    :File /test/defs.lisp

DEFINITION>
    :Name #:RUNTIME-PKG-C
    :Context (DEFPACKAGE #:RUNTIME-PKG-C
               (:USE :CL))
    :Type :PACKAGE
    :File /test/defs.lisp

DEFINITION>
    :Name USER-PKG::FN1
    :Context (DEFUN USER-PKG::FN1 (USER-PKG::X) (* 2 USER-PKG::X))
    :Type :FUNCTION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::FN1
    :Context (DEFUN USER-PKG::FN1 (USER-PKG::X) USER-PKG::X)
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name (SETF USER-PKG::FN1)
    :Context (DEFUN (SETF USER-PKG::FN1) (USER-PKG::NEW-VAL USER-PKG::X)
               (SETF (CAR USER-PKG::X) USER-PKG::NEW-VAL))
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::FN2A
    :Context (DEFUN USER-PKG::FN2A (USER-PKG::X &OPTIONAL USER-PKG::Y)
               (DECLARE (TYPE NUMBER USER-PKG::X))
               (PROPER-LIST-P (LIST USER-PKG::X USER-PKG::Y)))
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::FN2B
    :Context (DEFUN USER-PKG::FN2B (USER-PKG::X &KEY USER-PKG::Z)
               (DECLARE (TYPE NUMBER USER-PKG::X))
               (LIST USER-PKG::X USER-PKG::Z))
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::MY-COMB
    :Context (DEFINE-METHOD-COMBINATION USER-PKG::MY-COMB
               (&KEY (USER-PKG::ORDER :MOST-SPECIFIC-FIRST))
               ((USER-PKG::METHODS *))
               `(PROGN
                 ,(CASE USER-PKG::ORDER
                    (:MOST-SPECIFIC-FIRST `(CALL-METHOD ,#))
                    (:MOST-SPECIFIC-LAST `(CALL-METHOD ,#)))))
    :Type :METHOD-COMBINATION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::MY-COMB
    :Context (DEFINE-METHOD-COMBINATION USER-PKG::MY-COMB
               (&KEY (USER-PKG::ORDER :MOST-SPECIFIC-FIRST))
               ((USER-PKG::METHODS *))
               `(PROGN
                 ,(CASE USER-PKG::ORDER
                    (:MOST-SPECIFIC-FIRST `(CALL-METHOD ,#))
                    (:MOST-SPECIFIC-LAST `(CALL-METHOD ,#)))))
    :Type :METHOD-COMBINATION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::FN3
    :Context (SETF (SYMBOL-FUNCTION 'USER-PKG::FN3)
                     #'(LAMBDA (USER-PKG::X) (* USER-PKG::X 2)))
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::WITH-TEST
    :Context (DEFMACRO USER-PKG::WITH-TEST
                       ((USER-PKG::VAR) &BODY USER-PKG::BODY)
               `(LET ((,USER-PKG::VAR T))
                  ,@USER-PKG::BODY))
    :Type :MACRO
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::INCF-BY
    :Context (DEFINE-MODIFY-MACRO USER-PKG::INCF-BY (USER-PKG::N) +)
    :Type :MACRO
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::MY-PLUS
    :Context (DEFUN USER-PKG::MY-PLUS (USER-PKG::A USER-PKG::B)
               (+ USER-PKG::A USER-PKG::B))
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::MY-PLUS
    :Context (DEFINE-COMPILER-MACRO USER-PKG::MY-PLUS
                 (&WHOLE USER-PKG::FORM USER-PKG::A USER-PKG::B)
               (IF (AND (NUMBERP USER-PKG::A) (NUMBERP USER-PKG::B))
                   (+ USER-PKG::A USER-PKG::B)
                   USER-PKG::FORM))
    :Type :MACRO
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::MY-MACRO
    :Context (SETF (MACRO-FUNCTION 'USER-PKG::MY-MACRO)
                     #'(LAMBDA (USER-PKG::FORM USER-PKG::ENV)
                         (DECLARE (IGNORE USER-PKG::ENV))
                         `(LIST ,(SECOND USER-PKG::FORM))))
    :Type :MACRO
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::POINT
    :Context (DEFSTRUCT USER-PKG::POINT
               (USER-PKG::X 0 :TYPE NUMBER)
               (USER-PKG::Y 0 :TYPE NUMBER))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::POINT
    :Context (DEFSTRUCT
                 (USER-PKG::POINT
                  (:CONSTRUCTOR USER-PKG::MAKE-POINT
                   (USER-PKG::X USER-PKG::Y)))
               (USER-PKG::X 0 :TYPE NUMBER)
               (USER-PKG::Y 0 :TYPE NUMBER))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::POINT-X
    :Context (DEFSTRUCT USER-PKG::POINT
               (USER-PKG::X 0 :TYPE NUMBER)
               (USER-PKG::Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::POINT-X
    :Context (DEFSTRUCT
                 (USER-PKG::POINT
                  (:CONSTRUCTOR USER-PKG::MAKE-POINT
                   (USER-PKG::X USER-PKG::Y)))
               (USER-PKG::X 0 :TYPE NUMBER)
               (USER-PKG::Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::POINT-Y
    :Context (DEFSTRUCT USER-PKG::POINT
               (USER-PKG::X 0 :TYPE NUMBER)
               (USER-PKG::Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::POINT-Y
    :Context (DEFSTRUCT
                 (USER-PKG::POINT
                  (:CONSTRUCTOR USER-PKG::MAKE-POINT
                   (USER-PKG::X USER-PKG::Y)))
               (USER-PKG::X 0 :TYPE NUMBER)
               (USER-PKG::Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::MAKE-POINT
    :Context (DEFSTRUCT USER-PKG::POINT
               (USER-PKG::X 0 :TYPE NUMBER)
               (USER-PKG::Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::MAKE-POINT
    :Context (DEFSTRUCT
                 (USER-PKG::POINT
                  (:CONSTRUCTOR USER-PKG::MAKE-POINT
                   (USER-PKG::X USER-PKG::Y)))
               (USER-PKG::X 0 :TYPE NUMBER)
               (USER-PKG::Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::COPY-POINT
    :Context (DEFSTRUCT USER-PKG::POINT
               (USER-PKG::X 0 :TYPE NUMBER)
               (USER-PKG::Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::COPY-POINT
    :Context (DEFSTRUCT
                 (USER-PKG::POINT
                  (:CONSTRUCTOR USER-PKG::MAKE-POINT
                   (USER-PKG::X USER-PKG::Y)))
               (USER-PKG::X 0 :TYPE NUMBER)
               (USER-PKG::Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::POINT-P
    :Context (DEFSTRUCT USER-PKG::POINT
               (USER-PKG::X 0 :TYPE NUMBER)
               (USER-PKG::Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::POINT-P
    :Context (DEFSTRUCT
                 (USER-PKG::POINT
                  (:CONSTRUCTOR USER-PKG::MAKE-POINT
                   (USER-PKG::X USER-PKG::Y)))
               (USER-PKG::X 0 :TYPE NUMBER)
               (USER-PKG::Y 0 :TYPE NUMBER))
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::NAMED-POINT
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::NAMED-POINT
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::POINT-NAME
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :METHOD
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::NAMED-POINT)

DEFINITION>
    :Name USER-PKG::POINT-NAME
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::NAMED-POINT)

DEFINITION>
    :Name (SETF USER-PKG::POINT-NAME)
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :METHOD
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::NAMED-POINT)

DEFINITION>
    :Name (SETF USER-PKG::POINT-NAME)
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::NAMED-POINT)

DEFINITION>
    :Name USER-PKG::POINT-U
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :METHOD
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::NAMED-POINT)

DEFINITION>
    :Name USER-PKG::POINT-U
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::NAMED-POINT)

DEFINITION>
    :Name (SETF USER-PKG::POINT-U)
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :METHOD
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::NAMED-POINT)

DEFINITION>
    :Name (SETF USER-PKG::POINT-U)
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::NAMED-POINT)

DEFINITION>
    :Name USER-PKG::POINT-V
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :METHOD
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::NAMED-POINT)

DEFINITION>
    :Name USER-PKG::POINT-V
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::NAMED-POINT)

DEFINITION>
    :Name (SETF USER-PKG::POINT-V)
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :METHOD
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::NAMED-POINT)

DEFINITION>
    :Name (SETF USER-PKG::POINT-V)
    :Context (DEFCLASS USER-PKG::NAMED-POINT NIL
                       ((USER-PKG::NAME :INITARG :NAME :ACCESSOR
                         USER-PKG::POINT-NAME)
                        (USER-PKG::U :INITARG :U :ACCESSOR USER-PKG::POINT-U)
                        (USER-PKG::V :INITARG :V :ACCESSOR USER-PKG::POINT-V)))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::NAMED-POINT)

DEFINITION>
    :Name USER-PKG::INVALID-POINT
    :Context (DEFINE-CONDITION USER-PKG::INVALID-POINT
                 (ERROR)
                 ((USER-PKG::REASON :INITARG :REASON :READER
                   USER-PKG::POINT-ERROR-REASON)
                  (USER-PKG::VALUE :INITARG :VALUE :READER
                   USER-PKG::POINT-ERROR-VALUE)))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::INVALID-POINT
    :Context (DEFINE-CONDITION USER-PKG::INVALID-POINT
                 (ERROR)
                 ((USER-PKG::REASON :INITARG :REASON :READER
                   USER-PKG::POINT-ERROR-REASON)
                  (USER-PKG::VALUE :INITARG :VALUE :READER
                   USER-PKG::POINT-ERROR-VALUE)))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::POINT-ERROR-REASON
    :Context (DEFINE-CONDITION USER-PKG::INVALID-POINT
                 (ERROR)
                 ((USER-PKG::REASON :INITARG :REASON :READER
                   USER-PKG::POINT-ERROR-REASON)
                  (USER-PKG::VALUE :INITARG :VALUE :READER
                   USER-PKG::POINT-ERROR-VALUE)))
    :Type :METHOD
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::INVALID-POINT)

DEFINITION>
    :Name USER-PKG::POINT-ERROR-REASON
    :Context (DEFINE-CONDITION USER-PKG::INVALID-POINT
                 (ERROR)
                 ((USER-PKG::REASON :INITARG :REASON :READER
                   USER-PKG::POINT-ERROR-REASON)
                  (USER-PKG::VALUE :INITARG :VALUE :READER
                   USER-PKG::POINT-ERROR-VALUE)))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::INVALID-POINT)

DEFINITION>
    :Name USER-PKG::POINT-ERROR-VALUE
    :Context (DEFINE-CONDITION USER-PKG::INVALID-POINT
                 (ERROR)
                 ((USER-PKG::REASON :INITARG :REASON :READER
                   USER-PKG::POINT-ERROR-REASON)
                  (USER-PKG::VALUE :INITARG :VALUE :READER
                   USER-PKG::POINT-ERROR-VALUE)))
    :Type :METHOD
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::INVALID-POINT)

DEFINITION>
    :Name USER-PKG::POINT-ERROR-VALUE
    :Context (DEFINE-CONDITION USER-PKG::INVALID-POINT
                 (ERROR)
                 ((USER-PKG::REASON :INITARG :REASON :READER
                   USER-PKG::POINT-ERROR-REASON)
                  (USER-PKG::VALUE :INITARG :VALUE :READER
                   USER-PKG::POINT-ERROR-VALUE)))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::INVALID-POINT)

DEFINITION>
    :Name USER-PKG::GF1
    :Context (DEFGENERIC USER-PKG::GF1
                 (USER-PKG::Y)
               (:DOCUMENTATION "Basic generic function"))
    :Type :GENERIC-FUNCTION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::GF1
    :Context (DEFGENERIC USER-PKG::GF1
                 (USER-PKG::X)
               (:DOCUMENTATION "Basic generic function"))
    :Type :GENERIC-FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::GF2
    :Context (DEFGENERIC USER-PKG::GF2
                 (USER-PKG::X USER-PKG::Y)
               (:DOCUMENTATION "Generic function with multiple arguments")
               (:METHOD-COMBINATION STANDARD)
               (:GENERIC-FUNCTION-CLASS STANDARD-GENERIC-FUNCTION))
    :Type :GENERIC-FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name (SETF USER-PKG::GF3)
    :Context (DEFGENERIC (SETF USER-PKG::GF3)
                 (USER-PKG::NEW-VALUE USER-PKG::OBJ)
               (:DOCUMENTATION "Setf generic function"))
    :Type :GENERIC-FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::GF1
    :Context (DEFMETHOD USER-PKG::GF1 ((USER-PKG::X NUMBER)) (* USER-PKG::X 2))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (NUMBER)

DEFINITION>
    :Name USER-PKG::GF1
    :Context (DEFMETHOD USER-PKG::GF1 ((USER-PKG::X STRING))
               (CONCATENATE 'STRING USER-PKG::X USER-PKG::X))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (STRING)

DEFINITION>
    :Name USER-PKG::GF1
    :Context (DEFMETHOD USER-PKG::GF1 ((USER-PKG::X CONS))
               (LIST 'USER-PKG::CONS-PROCESSED USER-PKG::X))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (CONS)

DEFINITION>
    :Name USER-PKG::GF1
    :Context (DEFMETHOD USER-PKG::GF1 ((USER-PKG::X USER-PKG::NAMED-POINT))
               (LIST 'USER-PKG::NAMED-POINT (USER-PKG::POINT-NAME USER-PKG::X)
                     (USER-PKG::POINT-U USER-PKG::X)
                     (USER-PKG::POINT-V USER-PKG::X)))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::NAMED-POINT)

DEFINITION>
    :Name USER-PKG::GF2
    :Context (DEFMETHOD USER-PKG::GF2 ((USER-PKG::A NUMBER) USER-PKG::B)
               (LIST USER-PKG::A USER-PKG::B))
    :Type :METHOD
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (NUMBER T)

DEFINITION>
    :Name USER-PKG::GF2
    :Context (DEFMETHOD USER-PKG::GF2 ((USER-PKG::X NUMBER) USER-PKG::Y)
               (LIST USER-PKG::X USER-PKG::Y))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (NUMBER T)

DEFINITION>
    :Name USER-PKG::GF2
    :Context (DEFMETHOD USER-PKG::GF2 :BEFORE
                        ((USER-PKG::X NUMBER) USER-PKG::Y)
               (CHECK-TYPE USER-PKG::Y NUMBER))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Qualifiers (:BEFORE)
    :Specializers (NUMBER T)

DEFINITION>
    :Name (SETF USER-PKG::GF3)
    :Context (DEFMETHOD (SETF USER-PKG::GF3)
                        (USER-PKG::NEW-VALUE (USER-PKG::OBJ CONS))
               (SETF (CAR USER-PKG::OBJ) USER-PKG::NEW-VALUE)
               USER-PKG::NEW-VALUE)
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (T CONS)

DEFINITION>
    :Name (SETF USER-PKG::GF3)
    :Context (DEFMETHOD (SETF USER-PKG::GF3) :AROUND
                        (USER-PKG::NEW-VALUE (USER-PKG::OBJ CONS))
               (IF (NUMBERP USER-PKG::NEW-VALUE)
                   (CALL-NEXT-METHOD)
                   (ERROR "Invalid value")))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Qualifiers (:AROUND)
    :Specializers (T CONS)

DEFINITION>
    :Name USER-PKG::PROCESS-VAR
    :Context (DEFMETHOD USER-PKG::PROCESS-VAR
                        ((USER-PKG::VALUE (EQL 'USER-PKG::*SPECIAL1*))
                         &OPTIONAL (USER-PKG::LIMIT USER-PKG::*PARAM1*))
               "Method specialized to handle specifically the *special1* value"
               (LIST USER-PKG::VALUE USER-PKG::LIMIT))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers ((EQL 'USER-PKG::*SPECIAL1*))

DEFINITION>
    :Name USER-PKG::TEST-METHOD
    :Context (DEFMETHOD USER-PKG::TEST-METHOD ((USER-PKG::X STRING))
               USER-PKG::X)
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (STRING)

DEFINITION>
    :Name USER-PKG::TODAY
    :Context (DEFINE-SYMBOL-MACRO USER-PKG::TODAY (GET-UNIVERSAL-TIME))
    :Type :SYMBOL-MACRO
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::TODAY
    :Context (DEFINE-SYMBOL-MACRO USER-PKG::TODAY (GET-UNIVERSAL-TIME))
    :Type :SYMBOL-MACRO
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::PI/2
    :Context (DEFINE-SYMBOL-MACRO USER-PKG::PI/2 (/ PI 2))
    :Type :SYMBOL-MACRO
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::EMPTY-LIST
    :Context (DEFINE-SYMBOL-MACRO USER-PKG::EMPTY-LIST NIL)
    :Type :SYMBOL-MACRO
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::POS-INTEGER
    :Context (DEFTYPE USER-PKG::POS-INTEGER () '(FIXNUM 1 *))
    :Type :DEFTYPE
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::POS-INTEGER
    :Context (DEFTYPE USER-PKG::POS-INTEGER () '(INTEGER 1 *))
    :Type :DEFTYPE
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::SIZED-VECTOR
    :Context (DEFTYPE USER-PKG::SIZED-VECTOR
                      (USER-PKG::ELEMENT-TYPE USER-PKG::SIZE)
               `(VECTOR ,USER-PKG::ELEMENT-TYPE ,USER-PKG::SIZE))
    :Type :DEFTYPE
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::STRING-OR-SYMBOL
    :Context (DEFTYPE USER-PKG::STRING-OR-SYMBOL () '(OR STRING SYMBOL))
    :Type :DEFTYPE
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::*EMBEDDED-COUNT*
    :Context (DEFVAR USER-PKG::*EMBEDDED-COUNT*
               0
               "Counter for embedded functions")
    :Type :VARIABLE
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::*LAST-EMBEDDED-POINT*
    :Context (DEFVAR USER-PKG::*LAST-EMBEDDED-POINT*
               NIL
               "Storage for last point object")
    :Type :VARIABLE
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::SETUP-EMBEDDED-FUNCTIONS
    :Context (DEFUN USER-PKG::SETUP-EMBEDDED-FUNCTIONS ()
               (DEFUN USER-PKG::RESET-EMBEDDED-COUNT ()
                 (SETF USER-PKG::*EMBEDDED-COUNT* 0))
               (DEFUN USER-PKG::GET-EMBEDDED-COUNT ()
                 USER-PKG::*EMBEDDED-COUNT*)
               (VALUES #'USER-PKG::RESET-EMBEDDED-COUNT
                       #'USER-PKG::GET-EMBEDDED-COUNT))
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::RESET-EMBEDDED-COUNT
    :Context (DEFUN USER-PKG::RESET-EMBEDDED-COUNT ()
               (SETF USER-PKG::*EMBEDDED-COUNT* 0))
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::GET-EMBEDDED-COUNT
    :Context (DEFUN USER-PKG::GET-EMBEDDED-COUNT () USER-PKG::*EMBEDDED-COUNT*)
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::MONITORED-POINT
    :Context (DEFCLASS USER-PKG::MONITORED-POINT (USER-PKG::NAMED-POINT)
                       ((USER-PKG::TIMESTAMP :INITFORM (GET-UNIVERSAL-TIME)
                         :READER USER-PKG::POINT-TIMESTAMP)))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::POINT-TIMESTAMP
    :Context (DEFCLASS USER-PKG::MONITORED-POINT (USER-PKG::NAMED-POINT)
                       ((USER-PKG::TIMESTAMP :INITFORM (GET-UNIVERSAL-TIME)
                         :READER USER-PKG::POINT-TIMESTAMP)))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL
    :Specializers (USER-PKG::MONITORED-POINT)

DEFINITION>
    :Name SHARED-INITIALIZE
    :Context (DEFMETHOD SHARED-INITIALIZE :AFTER
                        ((USER-PKG::POINT USER-PKG::MONITORED-POINT)
                         USER-PKG::SLOT-NAMES
                         &KEY)
               (SETF USER-PKG::*LAST-EMBEDDED-POINT* USER-PKG::POINT)
               (UNLESS (FBOUNDP 'USER-PKG::GET-LAST-POINT-TIMESTAMP)
                 (DEFUN USER-PKG::GET-LAST-POINT-TIMESTAMP ()
                   (WHEN USER-PKG::*LAST-EMBEDDED-POINT*
                     (USER-PKG::POINT-TIMESTAMP
                      USER-PKG::*LAST-EMBEDDED-POINT*)))))
    :Type :METHOD
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INHERITED
    :Qualifiers (:AFTER)
    :Specializers (USER-PKG::MONITORED-POINT T)

DEFINITION>
    :Name USER-PKG::GET-LAST-POINT-TIMESTAMP
    :Context (DEFUN USER-PKG::GET-LAST-POINT-TIMESTAMP ()
               (WHEN USER-PKG::*LAST-EMBEDDED-POINT*
                 (USER-PKG::POINT-TIMESTAMP USER-PKG::*LAST-EMBEDDED-POINT*)))
    :Type :FUNCTION
    :File /test/defs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name #:INTERNAL-TEST-PKG
    :Context (DEFPACKAGE #:INTERNAL-TEST-PKG
               (:IMPORT-FROM :CL #:DEFVAR #:DEFUN #:+ #:*)
               (:EXPORT #:PUBLIC-FUNCTION
                        #:*PUBLIC-VARIABLE*
                        #:*SHADOWED-VAR*
                        #:SHADOWED-FUNC)
               (:DOCUMENTATION "Package with both internal and exported symbols for testing"))
    :Type :PACKAGE
    :File /test/defs2.lisp

DEFINITION>
    :Name #:SHADOWING-TEST-PKG
    :Context (DEFPACKAGE #:SHADOWING-TEST-PKG
               (:USE :CL #:INTERNAL-TEST-PKG)
               (:EXPORT #:TEST-SHADOWING)
               (:DOCUMENTATION "Package for testing shadowing of inherited symbols"))
    :Type :PACKAGE
    :File /test/defs2.lisp

DEFINITION>
    :Name INTERNAL-TEST-PKG:*PUBLIC-VARIABLE*
    :Context (DEFVAR INTERNAL-TEST-PKG:*PUBLIC-VARIABLE* 42 "This is exported")
    :Type :VARIABLE
    :File /test/defs2.lisp
    :Package #<PACKAGE "INTERNAL-TEST-PKG">
    :Status :EXTERNAL

DEFINITION>
    :Name INTERNAL-TEST-PKG::*INTERNAL-VAR*
    :Context (DEFVAR INTERNAL-TEST-PKG::*INTERNAL-VAR* 100 "This is internal")
    :Type :VARIABLE
    :File /test/defs2.lisp
    :Package #<PACKAGE "INTERNAL-TEST-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name INTERNAL-TEST-PKG:PUBLIC-FUNCTION
    :Context (DEFUN INTERNAL-TEST-PKG:PUBLIC-FUNCTION (INTERNAL-TEST-PKG::X)
               (+ INTERNAL-TEST-PKG::X 1))
    :Type :FUNCTION
    :File /test/defs2.lisp
    :Package #<PACKAGE "INTERNAL-TEST-PKG">
    :Status :EXTERNAL

DEFINITION>
    :Name INTERNAL-TEST-PKG::INTERNAL-FUNCTION
    :Context (DEFUN INTERNAL-TEST-PKG::INTERNAL-FUNCTION (INTERNAL-TEST-PKG::X)
               (* INTERNAL-TEST-PKG::X 2))
    :Type :FUNCTION
    :File /test/defs2.lisp
    :Package #<PACKAGE "INTERNAL-TEST-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name INTERNAL-TEST-PKG:*SHADOWED-VAR*
    :Context (DEFVAR INTERNAL-TEST-PKG:*SHADOWED-VAR*
               50
               "Variable that will be shadowed")
    :Type :VARIABLE
    :File /test/defs2.lisp
    :Package #<PACKAGE "INTERNAL-TEST-PKG">
    :Status :EXTERNAL

DEFINITION>
    :Name INTERNAL-TEST-PKG:SHADOWED-FUNC
    :Context (DEFUN INTERNAL-TEST-PKG:SHADOWED-FUNC (INTERNAL-TEST-PKG::X)
               (+ INTERNAL-TEST-PKG::X 10)
               "Function that will be shadowed")
    :Type :FUNCTION
    :File /test/defs2.lisp
    :Package #<PACKAGE "INTERNAL-TEST-PKG">
    :Status :EXTERNAL

DEFINITION>
    :Name USER-PKG::*PARAM4*
    :Context (DEFPARAMETER USER-PKG::*PARAM4* (LIST USER-PKG::*PARAM3*))
    :Type :VARIABLE
    :File /test/refs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::FUN1
    :Context (DEFUN USER-PKG::FUN1 (&OPTIONAL (USER-PKG::X USER-PKG::*PARAM1*))
               (PRINT USER-PKG::X)
               USER-PKG::*PARAM3*)
    :Type :FUNCTION
    :File /test/refs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::TEST-VARS
    :Context (DEFUN USER-PKG::TEST-VARS ()
               "Function that uses *SPECIAL1* and *PARAM1* variables."
               (LIST USER-PKG::*SPECIAL1* USER-PKG::*PARAM1*))
    :Type :FUNCTION
    :File /test/refs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::PACKAGE-TEST
    :Context (DEFUN USER-PKG::PACKAGE-TEST
                    (&OPTIONAL (USER-PKG::PKG :TEST3-PKG))
               (FORMAT NIL "~A has ~D symbols~%" USER-PKG::PKG
                       (LOOP USER-PKG::FOR USER-PKG::SYM USER-PKG::BEING THE USER-PKG::SYMBOLS USER-PKG::OF (FIND-PACKAGE
                                                                                                             USER-PKG::PKG)
                             COUNT T)))
    :Type :FUNCTION
    :File /test/refs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::TEST-POINT
    :Context (DEFCLASS USER-PKG::TEST-POINT (USER-PKG::MONITORED-POINT) NIL)
    :Type :STRUCTURE/CLASS/CONDITION
    :File /test/refs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::TEST-SIZED-VECTOR
    :Context (DEFUN USER-PKG::TEST-SIZED-VECTOR (USER-PKG::VEC)
               (DECLARE (TYPE (USER-PKG::SIZED-VECTOR T *) USER-PKG::VEC))
               (ARRAY-DIMENSIONS USER-PKG::VEC))
    :Type :FUNCTION
    :File /test/refs.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::MY-VAR
    :Context (DEFVAR USER-PKG::MY-VAR)
    :Type :VARIABLE
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::MY-PARAM
    :Context (DEFPARAMETER USER-PKG::MY-PARAM 0)
    :Type :VARIABLE
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::MY-CONST
    :Context (DEFCONSTANT USER-PKG::MY-CONST 0)
    :Type :VARIABLE
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::TEST-PUBLIC-ACCESS
    :Context (DEFUN USER-PKG::TEST-PUBLIC-ACCESS ()
               (LET ((USER-PKG::VAL INTERNAL-TEST-PKG:*PUBLIC-VARIABLE*))
                 (INTERNAL-TEST-PKG:PUBLIC-FUNCTION USER-PKG::VAL)))
    :Type :FUNCTION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::TEST-INTERNAL-ACCESS
    :Context (DEFUN USER-PKG::TEST-INTERNAL-ACCESS ()
               (LET ((USER-PKG::VAL INTERNAL-TEST-PKG::*INTERNAL-VAR*))
                 (INTERNAL-TEST-PKG::INTERNAL-FUNCTION USER-PKG::VAL)))
    :Type :FUNCTION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::TEST-INTERNAL-REFERENCE
    :Context (DEFUN USER-PKG::TEST-INTERNAL-REFERENCE (USER-PKG::X)
               "This function references internal symbols of another package"
               (+ USER-PKG::X (INTERNAL-TEST-PKG::INTERNAL-FUNCTION 10)))
    :Type :FUNCTION
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name USER-PKG::WITH-INTERNAL-TEST
    :Context (DEFMACRO USER-PKG::WITH-INTERNAL-TEST (&BODY USER-PKG::BODY)
               `(LET ((USER-PKG::VALUE INTERNAL-TEST-PKG::*INTERNAL-VAR*))
                  ,@USER-PKG::BODY))
    :Type :MACRO
    :File /test/anoms.lisp
    :Package #<PACKAGE "USER-PKG">
    :Status :INTERNAL

DEFINITION>
    :Name INTERNAL-TEST-PKG:*SHADOWED-VAR*
    :Context (DEFVAR INTERNAL-TEST-PKG:*SHADOWED-VAR*
               100
               "Shadows the inherited variable")
    :Type :VARIABLE
    :File /test/cohesion-test.lisp
    :Package #<PACKAGE "SHADOWING-TEST-PKG">
    :Status :INHERITED

DEFINITION>
    :Name INTERNAL-TEST-PKG:*SHADOWED-VAR*
    :Context (DEFVAR INTERNAL-TEST-PKG:*SHADOWED-VAR*
               100
               "Shadows the inherited variable")
    :Type :VARIABLE
    :File /test/anoms2.lisp
    :Package #<PACKAGE "SHADOWING-TEST-PKG">
    :Status :INHERITED

DEFINITION>
    :Name INTERNAL-TEST-PKG:SHADOWED-FUNC
    :Context (DEFUN INTERNAL-TEST-PKG:SHADOWED-FUNC
                    (SHADOWING-TEST-PKG::X SHADOWING-TEST-PKG::Y)
               (* SHADOWING-TEST-PKG::X SHADOWING-TEST-PKG::Y)
               "Shadows the inherited function")
    :Type :FUNCTION
    :File /test/cohesion-test.lisp
    :Package #<PACKAGE "SHADOWING-TEST-PKG">
    :Status :INHERITED

DEFINITION>
    :Name INTERNAL-TEST-PKG:SHADOWED-FUNC
    :Context (DEFUN INTERNAL-TEST-PKG:SHADOWED-FUNC
                    (SHADOWING-TEST-PKG::X SHADOWING-TEST-PKG::Y)
               (* SHADOWING-TEST-PKG::X SHADOWING-TEST-PKG::Y)
               "Shadows the inherited function")
    :Type :FUNCTION
    :File /test/anoms2.lisp
    :Package #<PACKAGE "SHADOWING-TEST-PKG">
    :Status :INHERITED

DEFINITION>
    :Name :CYCLE-PKG-A
    :Context (DEFPACKAGE :CYCLE-PKG-A
               (:USE :CL)
               (:EXPORT :CLASS-A))
    :Type :PACKAGE
    :File /test/cycle-test.lisp

DEFINITION>
    :Name :CYCLE-PKG-B
    :Context (DEFPACKAGE :CYCLE-PKG-B
               (:USE :CL)
               (:EXPORT :CLASS-B))
    :Type :PACKAGE
    :File /test/cycle-test.lisp

DEFINITION>
    :Name :CYCLE-PKG-C
    :Context (DEFPACKAGE :CYCLE-PKG-C
               (:USE :CL)
               (:EXPORT :CLASS-C))
    :Type :PACKAGE
    :File /test/cycle-test.lisp

DEFINITION>
    :Name CYCLE-PKG-A:CLASS-A
    :Context (DEFCLASS CYCLE-PKG-A:CLASS-A NIL
                       ((CYCLE-PKG-A::B-REF :ACCESSOR CYCLE-PKG-A::A-B-REF
                         :INITARG :B-REF :TYPE CYCLE-PKG-B:CLASS-B)))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /test/cycle-test.lisp
    :Package #<PACKAGE "CYCLE-PKG-A">
    :Status :EXTERNAL

DEFINITION>
    :Name CYCLE-PKG-A::A-B-REF
    :Context (DEFCLASS CYCLE-PKG-A:CLASS-A NIL
                       ((CYCLE-PKG-A::B-REF :ACCESSOR CYCLE-PKG-A::A-B-REF
                         :INITARG :B-REF :TYPE CYCLE-PKG-B:CLASS-B)))
    :Type :METHOD
    :File /test/cycle-test.lisp
    :Package #<PACKAGE "CYCLE-PKG-A">
    :Status :INTERNAL
    :Specializers (CYCLE-PKG-A:CLASS-A)

DEFINITION>
    :Name (SETF CYCLE-PKG-A::A-B-REF)
    :Context (DEFCLASS CYCLE-PKG-A:CLASS-A NIL
                       ((CYCLE-PKG-A::B-REF :ACCESSOR CYCLE-PKG-A::A-B-REF
                         :INITARG :B-REF :TYPE CYCLE-PKG-B:CLASS-B)))
    :Type :METHOD
    :File /test/cycle-test.lisp
    :Package #<PACKAGE "CYCLE-PKG-A">
    :Status :INTERNAL
    :Specializers (CYCLE-PKG-A:CLASS-A)

DEFINITION>
    :Name CYCLE-PKG-B:CLASS-B
    :Context (DEFCLASS CYCLE-PKG-B:CLASS-B NIL
                       ((CYCLE-PKG-B::C-REF :ACCESSOR CYCLE-PKG-B::B-C-REF
                         :INITARG :C-REF :TYPE CYCLE-PKG-C:CLASS-C)))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /test/cycle-test.lisp
    :Package #<PACKAGE "CYCLE-PKG-B">
    :Status :EXTERNAL

DEFINITION>
    :Name CYCLE-PKG-B::B-C-REF
    :Context (DEFCLASS CYCLE-PKG-B:CLASS-B NIL
                       ((CYCLE-PKG-B::C-REF :ACCESSOR CYCLE-PKG-B::B-C-REF
                         :INITARG :C-REF :TYPE CYCLE-PKG-C:CLASS-C)))
    :Type :METHOD
    :File /test/cycle-test.lisp
    :Package #<PACKAGE "CYCLE-PKG-B">
    :Status :INTERNAL
    :Specializers (CYCLE-PKG-B:CLASS-B)

DEFINITION>
    :Name (SETF CYCLE-PKG-B::B-C-REF)
    :Context (DEFCLASS CYCLE-PKG-B:CLASS-B NIL
                       ((CYCLE-PKG-B::C-REF :ACCESSOR CYCLE-PKG-B::B-C-REF
                         :INITARG :C-REF :TYPE CYCLE-PKG-C:CLASS-C)))
    :Type :METHOD
    :File /test/cycle-test.lisp
    :Package #<PACKAGE "CYCLE-PKG-B">
    :Status :INTERNAL
    :Specializers (CYCLE-PKG-B:CLASS-B)

DEFINITION>
    :Name CYCLE-PKG-C:CLASS-C
    :Context (DEFCLASS CYCLE-PKG-C:CLASS-C NIL
                       ((CYCLE-PKG-C::A-REF :ACCESSOR CYCLE-PKG-C::C-A-REF
                         :INITARG :A-REF :TYPE CYCLE-PKG-A:CLASS-A)))
    :Type :STRUCTURE/CLASS/CONDITION
    :File /test/cycle-test.lisp
    :Package #<PACKAGE "CYCLE-PKG-C">
    :Status :EXTERNAL

DEFINITION>
    :Name CYCLE-PKG-C::C-A-REF
    :Context (DEFCLASS CYCLE-PKG-C:CLASS-C NIL
                       ((CYCLE-PKG-C::A-REF :ACCESSOR CYCLE-PKG-C::C-A-REF
                         :INITARG :A-REF :TYPE CYCLE-PKG-A:CLASS-A)))
    :Type :METHOD
    :File /test/cycle-test.lisp
    :Package #<PACKAGE "CYCLE-PKG-C">
    :Status :INTERNAL
    :Specializers (CYCLE-PKG-C:CLASS-C)

DEFINITION>
    :Name (SETF CYCLE-PKG-C::C-A-REF)
    :Context (DEFCLASS CYCLE-PKG-C:CLASS-C NIL
                       ((CYCLE-PKG-C::A-REF :ACCESSOR CYCLE-PKG-C::C-A-REF
                         :INITARG :A-REF :TYPE CYCLE-PKG-A:CLASS-A)))
    :Type :METHOD
    :File /test/cycle-test.lisp
    :Package #<PACKAGE "CYCLE-PKG-C">
    :Status :INTERNAL
    :Specializers (CYCLE-PKG-C:CLASS-C)

DEFINITION>
    :Name #:EXTERNAL-HEAVY-PKG
    :Context (DEFPACKAGE #:EXTERNAL-HEAVY-PKG
               (:USE :CL)
               (:IMPORT-FROM :ALEXANDRIA
                             #:CURRY
                             #:RCURRY
                             #:COMPOSE
                             #:WITH-GENSYMS
                             #:ONCE-ONLY
                             #:WHEN-LET
                             #:IF-LET
                             #:ENSURE-LIST
                             ...)
               (:EXPORT #:PROCESS-DATA))
    :Type :PACKAGE
    :File /test/cohesion-test.lisp

DEFINITION>
    :Name PROCESS-DATA
    :Context (DEFUN PROCESS-DATA (DATA)
               (LET ((NORMALIZED (ENSURE-LIST DATA)))
                 (WHEN-LET ((VALID-ITEMS #))
                   (MAPCAR (CURRY #'APPLY #'COMPOSE) VALID-ITEMS))))
    :Type :FUNCTION
    :File /test/cohesion-test.lisp
    :Package #<PACKAGE "EXTERNAL-HEAVY-PKG">
    :Status :EXTERNAL

