
Reference Analysis Trace for d:/quicklisp/local-projects/test-project/source/single-pkg-defs.lisp

-------------------------------
WALK(ING):
  Expression: (DEFPACKAGE #:USER-MAIN-PACKAGE
                (:USE :CL))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFPACKAGE
  Context: (DEFPACKAGE #:USER-MAIN-PACKAGE
             (:USE :CL))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: #:USER-MAIN-PACKAGE
  Context: (DEFPACKAGE #:USER-MAIN-PACKAGE
             (:USE :CL))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (:USE :CL)
  Context: (DEFPACKAGE #:USER-MAIN-PACKAGE
             (:USE :CL))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: :USE
  Context: (:USE :CL)
  Parent: (DEFPACKAGE #:USER-MAIN-PACKAGE
            (:USE :CL))
  Depth: 2
WALK(ING):
  Expression: :CL
  Context: (:USE :CL)
  Parent: (DEFPACKAGE #:USER-MAIN-PACKAGE
            (:USE :CL))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (IN-PACKAGE #:USER-MAIN-PACKAGE)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: IN-PACKAGE
  Context: (IN-PACKAGE #:USER-MAIN-PACKAGE)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: #:USER-MAIN-PACKAGE
  Context: (IN-PACKAGE #:USER-MAIN-PACKAGE)
  Parent: NIL
  Depth: 1

-------------------------------
WALK(ING):
  Expression: (DEFVAR *DEFVAR-VARIABLE* 0)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFVAR
  Context: (DEFVAR *DEFVAR-VARIABLE* 0)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: *DEFVAR-VARIABLE*
  Context: (DEFVAR *DEFVAR-VARIABLE* 0)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: 0
  Context: (DEFVAR *DEFVAR-VARIABLE* 0)
  Parent: NIL
  Depth: 1

-------------------------------
WALK(ING):
  Expression: (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFPARAMETER
  Context: (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: *DEFPARAMETER-VARIABLE*
  Context: (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: 0
  Context: (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0)
  Parent: NIL
  Depth: 1

-------------------------------
WALK(ING):
  Expression: (DEFCONSTANT +DEFCONSTANT-VARIABLE+ "aeiou")
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFCONSTANT
  Context: (DEFCONSTANT +DEFCONSTANT-VARIABLE+ "aeiou")
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: +DEFCONSTANT-VARIABLE+
  Context: (DEFCONSTANT +DEFCONSTANT-VARIABLE+ "aeiou")
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: "aeiou"
  Context: (DEFCONSTANT +DEFCONSTANT-VARIABLE+ "aeiou")
  Parent: NIL
  Depth: 1

-------------------------------
WALK(ING):
  Expression: (DEFVAR *DEFVAR-VARIABLE*
                (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFVAR
  Context: (DEFVAR *DEFVAR-VARIABLE* (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: *DEFVAR-VARIABLE*
  Context: (DEFVAR *DEFVAR-VARIABLE* (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0)
  Context: (DEFVAR *DEFVAR-VARIABLE* (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: DEFPARAMETER
  Context: (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0)
  Parent: (DEFVAR *DEFVAR-VARIABLE* (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0))
  Depth: 2
WALK(ING):
  Expression: *DEFPARAMETER-VARIABLE*
  Context: (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0)
  Parent: (DEFVAR *DEFVAR-VARIABLE* (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0))
  Depth: 2
WALK(ING):
  Expression: 0
  Context: (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0)
  Parent: (DEFVAR *DEFVAR-VARIABLE* (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (DECLAIM (SPECIAL *SYMBOL-VALUE-VARIABLE*))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DECLAIM
  Context: (DECLAIM (SPECIAL *SYMBOL-VALUE-VARIABLE*))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (SPECIAL *SYMBOL-VALUE-VARIABLE*)
  Context: (DECLAIM (SPECIAL *SYMBOL-VALUE-VARIABLE*))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: SPECIAL
  Context: (SPECIAL *SYMBOL-VALUE-VARIABLE*)
  Parent: (DECLAIM (SPECIAL *SYMBOL-VALUE-VARIABLE*))
  Depth: 2
WALK(ING):
  Expression: *SYMBOL-VALUE-VARIABLE*
  Context: (SPECIAL *SYMBOL-VALUE-VARIABLE*)
  Parent: (DECLAIM (SPECIAL *SYMBOL-VALUE-VARIABLE*))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (SETF (SYMBOL-VALUE '*SYMBOL-VALUE-VARIABLE*) 0)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: SETF
  Context: (SETF (SYMBOL-VALUE '*SYMBOL-VALUE-VARIABLE*) 0)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (SYMBOL-VALUE '*SYMBOL-VALUE-VARIABLE*)
  Context: (SETF (SYMBOL-VALUE '*SYMBOL-VALUE-VARIABLE*) 0)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: SYMBOL-VALUE
  Context: (SYMBOL-VALUE '*SYMBOL-VALUE-VARIABLE*)
  Parent: (SETF (SYMBOL-VALUE '*SYMBOL-VALUE-VARIABLE*) 0)
  Depth: 2
WALK(ING):
  Expression: '*SYMBOL-VALUE-VARIABLE*
  Context: (SYMBOL-VALUE '*SYMBOL-VALUE-VARIABLE*)
  Parent: (SETF (SYMBOL-VALUE '*SYMBOL-VALUE-VARIABLE*) 0)
  Depth: 2
WALK(ING):
  Expression: QUOTE
  Context: '*SYMBOL-VALUE-VARIABLE*
  Parent: (SYMBOL-VALUE '*SYMBOL-VALUE-VARIABLE*)
  Depth: 3
WALK(ING):
  Expression: *SYMBOL-VALUE-VARIABLE*
  Context: '*SYMBOL-VALUE-VARIABLE*
  Parent: (SYMBOL-VALUE '*SYMBOL-VALUE-VARIABLE*)
  Depth: 3
WALK(ING):
  Expression: 0
  Context: (SETF (SYMBOL-VALUE '*SYMBOL-VALUE-VARIABLE*) 0)
  Parent: NIL
  Depth: 1

-------------------------------
WALK(ING):
  Expression: (DEFUN DEFUN-NAME () 0)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFUN
  Context: (DEFUN DEFUN-NAME () 0)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: DEFUN-NAME
  Context: (DEFUN DEFUN-NAME () 0)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: NIL
  Context: (DEFUN DEFUN-NAME () 0)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: 0
  Context: (DEFUN DEFUN-NAME () 0)
  Parent: NIL
  Depth: 1

-------------------------------
WALK(ING):
  Expression: (SETF (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME) (LAMBDA () 0))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: SETF
  Context: (SETF (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME) (LAMBDA () 0))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME)
  Context: (SETF (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME) (LAMBDA () 0))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: SYMBOL-FUNCTION
  Context: (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME)
  Parent: (SETF (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME) (LAMBDA () 0))
  Depth: 2
WALK(ING):
  Expression: 'SYMBOL-FUNCTION-NAME
  Context: (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME)
  Parent: (SETF (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME) (LAMBDA () 0))
  Depth: 2
WALK(ING):
  Expression: QUOTE
  Context: 'SYMBOL-FUNCTION-NAME
  Parent: (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME)
  Depth: 3
WALK(ING):
  Expression: SYMBOL-FUNCTION-NAME
  Context: 'SYMBOL-FUNCTION-NAME
  Parent: (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME)
  Depth: 3
WALK(ING):
  Expression: (LAMBDA () 0)
  Context: (SETF (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME) (LAMBDA () 0))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: LAMBDA
  Context: (LAMBDA () 0)
  Parent: (SETF (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME) (LAMBDA () 0))
  Depth: 2
WALK(ING):
  Expression: NIL
  Context: (LAMBDA () 0)
  Parent: (SETF (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME) (LAMBDA () 0))
  Depth: 2
WALK(ING):
  Expression: 0
  Context: (LAMBDA () 0)
  Parent: (SETF (SYMBOL-FUNCTION 'SYMBOL-FUNCTION-NAME) (LAMBDA () 0))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (SETF (FDEFINITION 'FDEFINITION-FUNCTION-NAME) (LAMBDA () 0))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: SETF
  Context: (SETF (FDEFINITION 'FDEFINITION-FUNCTION-NAME) (LAMBDA () 0))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (FDEFINITION 'FDEFINITION-FUNCTION-NAME)
  Context: (SETF (FDEFINITION 'FDEFINITION-FUNCTION-NAME) (LAMBDA () 0))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: FDEFINITION
  Context: (FDEFINITION 'FDEFINITION-FUNCTION-NAME)
  Parent: (SETF (FDEFINITION 'FDEFINITION-FUNCTION-NAME) (LAMBDA () 0))
  Depth: 2
WALK(ING):
  Expression: 'FDEFINITION-FUNCTION-NAME
  Context: (FDEFINITION 'FDEFINITION-FUNCTION-NAME)
  Parent: (SETF (FDEFINITION 'FDEFINITION-FUNCTION-NAME) (LAMBDA () 0))
  Depth: 2
WALK(ING):
  Expression: QUOTE
  Context: 'FDEFINITION-FUNCTION-NAME
  Parent: (FDEFINITION 'FDEFINITION-FUNCTION-NAME)
  Depth: 3
WALK(ING):
  Expression: FDEFINITION-FUNCTION-NAME
  Context: 'FDEFINITION-FUNCTION-NAME
  Parent: (FDEFINITION 'FDEFINITION-FUNCTION-NAME)
  Depth: 3
WALK(ING):
  Expression: (LAMBDA () 0)
  Context: (SETF (FDEFINITION 'FDEFINITION-FUNCTION-NAME) (LAMBDA () 0))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: LAMBDA
  Context: (LAMBDA () 0)
  Parent: (SETF (FDEFINITION 'FDEFINITION-FUNCTION-NAME) (LAMBDA () 0))
  Depth: 2
WALK(ING):
  Expression: NIL
  Context: (LAMBDA () 0)
  Parent: (SETF (FDEFINITION 'FDEFINITION-FUNCTION-NAME) (LAMBDA () 0))
  Depth: 2
WALK(ING):
  Expression: 0
  Context: (LAMBDA () 0)
  Parent: (SETF (FDEFINITION 'FDEFINITION-FUNCTION-NAME) (LAMBDA () 0))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (DEFSTRUCT CIRCLE (RADIUS 1 :TYPE NUMBER))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFSTRUCT
  Context: (DEFSTRUCT CIRCLE (RADIUS 1 :TYPE NUMBER))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: CIRCLE
  Context: (DEFSTRUCT CIRCLE (RADIUS 1 :TYPE NUMBER))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (RADIUS 1 :TYPE NUMBER)
  Context: (DEFSTRUCT CIRCLE (RADIUS 1 :TYPE NUMBER))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: RADIUS
  Context: (RADIUS 1 :TYPE NUMBER)
  Parent: (DEFSTRUCT CIRCLE (RADIUS 1 :TYPE NUMBER))
  Depth: 2
WALK(ING):
  Expression: 1
  Context: (RADIUS 1 :TYPE NUMBER)
  Parent: (DEFSTRUCT CIRCLE (RADIUS 1 :TYPE NUMBER))
  Depth: 2
WALK(ING):
  Expression: :TYPE
  Context: (RADIUS 1 :TYPE NUMBER)
  Parent: (DEFSTRUCT CIRCLE (RADIUS 1 :TYPE NUMBER))
  Depth: 2
WALK(ING):
  Expression: NUMBER
  Context: (RADIUS 1 :TYPE NUMBER)
  Parent: (DEFSTRUCT CIRCLE (RADIUS 1 :TYPE NUMBER))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (DEFSTRUCT (PERSON (:CONC-NAME PERSON.)) (AGE 0 :TYPE FIXNUM))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFSTRUCT
  Context: (DEFSTRUCT (PERSON (:CONC-NAME PERSON.)) (AGE 0 :TYPE FIXNUM))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (PERSON (:CONC-NAME PERSON.))
  Context: (DEFSTRUCT (PERSON (:CONC-NAME PERSON.)) (AGE 0 :TYPE FIXNUM))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: PERSON
  Context: (PERSON (:CONC-NAME PERSON.))
  Parent: (DEFSTRUCT (PERSON (:CONC-NAME PERSON.)) (AGE 0 :TYPE FIXNUM))
  Depth: 2
WALK(ING):
  Expression: (:CONC-NAME PERSON.)
  Context: (PERSON (:CONC-NAME PERSON.))
  Parent: (DEFSTRUCT (PERSON (:CONC-NAME PERSON.)) (AGE 0 :TYPE FIXNUM))
  Depth: 2
WALK(ING):
  Expression: :CONC-NAME
  Context: (:CONC-NAME PERSON.)
  Parent: (PERSON (:CONC-NAME PERSON.))
  Depth: 3
WALK(ING):
  Expression: PERSON.
  Context: (:CONC-NAME PERSON.)
  Parent: (PERSON (:CONC-NAME PERSON.))
  Depth: 3
WALK(ING):
  Expression: (AGE 0 :TYPE FIXNUM)
  Context: (DEFSTRUCT (PERSON (:CONC-NAME PERSON.)) (AGE 0 :TYPE FIXNUM))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: AGE
  Context: (AGE 0 :TYPE FIXNUM)
  Parent: (DEFSTRUCT (PERSON (:CONC-NAME PERSON.)) (AGE 0 :TYPE FIXNUM))
  Depth: 2
WALK(ING):
  Expression: 0
  Context: (AGE 0 :TYPE FIXNUM)
  Parent: (DEFSTRUCT (PERSON (:CONC-NAME PERSON.)) (AGE 0 :TYPE FIXNUM))
  Depth: 2
WALK(ING):
  Expression: :TYPE
  Context: (AGE 0 :TYPE FIXNUM)
  Parent: (DEFSTRUCT (PERSON (:CONC-NAME PERSON.)) (AGE 0 :TYPE FIXNUM))
  Depth: 2
WALK(ING):
  Expression: FIXNUM
  Context: (AGE 0 :TYPE FIXNUM)
  Parent: (DEFSTRUCT (PERSON (:CONC-NAME PERSON.)) (AGE 0 :TYPE FIXNUM))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (DEFGENERIC COMPUTE-AREA
                  (SHAPE)
                (:DOCUMENTATION
                 "Compute the area of different geometric shapes"))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFGENERIC
  Context: (DEFGENERIC COMPUTE-AREA
               (SHAPE)
             (:DOCUMENTATION "Compute the area of different geometric shapes"))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: COMPUTE-AREA
  Context: (DEFGENERIC COMPUTE-AREA
               (SHAPE)
             (:DOCUMENTATION "Compute the area of different geometric shapes"))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (SHAPE)
  Context: (DEFGENERIC COMPUTE-AREA
               (SHAPE)
             (:DOCUMENTATION "Compute the area of different geometric shapes"))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: SHAPE
  Context: (SHAPE)
  Parent: (DEFGENERIC COMPUTE-AREA
              (SHAPE)
            (:DOCUMENTATION "Compute the area of different geometric shapes"))
  Depth: 2
WALK(ING):
  Expression: (:DOCUMENTATION "Compute the area of different geometric shapes")
  Context: (DEFGENERIC COMPUTE-AREA
               (SHAPE)
             (:DOCUMENTATION "Compute the area of different geometric shapes"))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: :DOCUMENTATION
  Context: (:DOCUMENTATION "Compute the area of different geometric shapes")
  Parent: (DEFGENERIC COMPUTE-AREA
              (SHAPE)
            (:DOCUMENTATION "Compute the area of different geometric shapes"))
  Depth: 2
WALK(ING):
  Expression: "Compute the area of different geometric shapes"
  Context: (:DOCUMENTATION "Compute the area of different geometric shapes")
  Parent: (DEFGENERIC COMPUTE-AREA
              (SHAPE)
            (:DOCUMENTATION "Compute the area of different geometric shapes"))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (DEFMETHOD COMPUTE-AREA ((SHAPE CIRCLE))
                (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2)))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFMETHOD
  Context: (DEFMETHOD COMPUTE-AREA ((SHAPE CIRCLE))
             (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2)))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: COMPUTE-AREA
  Context: (DEFMETHOD COMPUTE-AREA ((SHAPE CIRCLE))
             (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2)))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: ((SHAPE CIRCLE))
  Context: (DEFMETHOD COMPUTE-AREA ((SHAPE CIRCLE))
             (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2)))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (SHAPE CIRCLE)
  Context: ((SHAPE CIRCLE))
  Parent: (DEFMETHOD COMPUTE-AREA ((SHAPE CIRCLE))
            (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2)))
  Depth: 2
WALK(ING):
  Expression: SHAPE
  Context: (SHAPE CIRCLE)
  Parent: ((SHAPE CIRCLE))
  Depth: 3
WALK(ING):
  Expression: CIRCLE
  Context: (SHAPE CIRCLE)
  Parent: ((SHAPE CIRCLE))
  Depth: 3
WALK(ING):
  Expression: (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2))
  Context: (DEFMETHOD COMPUTE-AREA ((SHAPE CIRCLE))
             (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2)))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: *
  Context: (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2))
  Parent: (DEFMETHOD COMPUTE-AREA ((SHAPE CIRCLE))
            (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2)))
  Depth: 2
WALK(ING):
  Expression: PI
  Context: (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2))
  Parent: (DEFMETHOD COMPUTE-AREA ((SHAPE CIRCLE))
            (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2)))
  Depth: 2
WALK(ING):
  Expression: (EXPT (CIRCLE-RADIUS SHAPE) 2)
  Context: (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2))
  Parent: (DEFMETHOD COMPUTE-AREA ((SHAPE CIRCLE))
            (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2)))
  Depth: 2
WALK(ING):
  Expression: EXPT
  Context: (EXPT (CIRCLE-RADIUS SHAPE) 2)
  Parent: (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2))
  Depth: 3
WALK(ING):
  Expression: (CIRCLE-RADIUS SHAPE)
  Context: (EXPT (CIRCLE-RADIUS SHAPE) 2)
  Parent: (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2))
  Depth: 3
WALK(ING):
  Expression: CIRCLE-RADIUS
  Context: (CIRCLE-RADIUS SHAPE)
  Parent: (EXPT (CIRCLE-RADIUS SHAPE) 2)
  Depth: 4
WALK(ING):
  Expression: SHAPE
  Context: (CIRCLE-RADIUS SHAPE)
  Parent: (EXPT (CIRCLE-RADIUS SHAPE) 2)
  Depth: 4
WALK(ING):
  Expression: 2
  Context: (EXPT (CIRCLE-RADIUS SHAPE) 2)
  Parent: (* PI (EXPT (CIRCLE-RADIUS SHAPE) 2))
  Depth: 3

-------------------------------
WALK(ING):
  Expression: (DEFGENERIC PROCESS-DATA
                  (DATA &KEY)
                (:DOCUMENTATION "Process data with various methods"))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFGENERIC
  Context: (DEFGENERIC PROCESS-DATA
               (DATA &KEY)
             (:DOCUMENTATION "Process data with various methods"))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: PROCESS-DATA
  Context: (DEFGENERIC PROCESS-DATA
               (DATA &KEY)
             (:DOCUMENTATION "Process data with various methods"))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (DATA &KEY)
  Context: (DEFGENERIC PROCESS-DATA
               (DATA &KEY)
             (:DOCUMENTATION "Process data with various methods"))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: DATA
  Context: (DATA &KEY)
  Parent: (DEFGENERIC PROCESS-DATA
              (DATA &KEY)
            (:DOCUMENTATION "Process data with various methods"))
  Depth: 2
WALK(ING):
  Expression: &KEY
  Context: (DATA &KEY)
  Parent: (DEFGENERIC PROCESS-DATA
              (DATA &KEY)
            (:DOCUMENTATION "Process data with various methods"))
  Depth: 2
WALK(ING):
  Expression: (:DOCUMENTATION "Process data with various methods")
  Context: (DEFGENERIC PROCESS-DATA
               (DATA &KEY)
             (:DOCUMENTATION "Process data with various methods"))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: :DOCUMENTATION
  Context: (:DOCUMENTATION "Process data with various methods")
  Parent: (DEFGENERIC PROCESS-DATA
              (DATA &KEY)
            (:DOCUMENTATION "Process data with various methods"))
  Depth: 2
WALK(ING):
  Expression: "Process data with various methods"
  Context: (:DOCUMENTATION "Process data with various methods")
  Parent: (DEFGENERIC PROCESS-DATA
              (DATA &KEY)
            (:DOCUMENTATION "Process data with various methods"))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (DEFMETHOD PROCESS-DATA ((DATA STRING) &KEY) (STRING-UPCASE DATA))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFMETHOD
  Context: (DEFMETHOD PROCESS-DATA ((DATA STRING) &KEY) (STRING-UPCASE DATA))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: PROCESS-DATA
  Context: (DEFMETHOD PROCESS-DATA ((DATA STRING) &KEY) (STRING-UPCASE DATA))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: ((DATA STRING) &KEY)
  Context: (DEFMETHOD PROCESS-DATA ((DATA STRING) &KEY) (STRING-UPCASE DATA))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (DATA STRING)
  Context: ((DATA STRING) &KEY)
  Parent: (DEFMETHOD PROCESS-DATA ((DATA STRING) &KEY) (STRING-UPCASE DATA))
  Depth: 2
WALK(ING):
  Expression: DATA
  Context: (DATA STRING)
  Parent: ((DATA STRING) &KEY)
  Depth: 3
WALK(ING):
  Expression: STRING
  Context: (DATA STRING)
  Parent: ((DATA STRING) &KEY)
  Depth: 3
WALK(ING):
  Expression: &KEY
  Context: ((DATA STRING) &KEY)
  Parent: (DEFMETHOD PROCESS-DATA ((DATA STRING) &KEY) (STRING-UPCASE DATA))
  Depth: 2
WALK(ING):
  Expression: (STRING-UPCASE DATA)
  Context: (DEFMETHOD PROCESS-DATA ((DATA STRING) &KEY) (STRING-UPCASE DATA))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: STRING-UPCASE
  Context: (STRING-UPCASE DATA)
  Parent: (DEFMETHOD PROCESS-DATA ((DATA STRING) &KEY) (STRING-UPCASE DATA))
  Depth: 2
WALK(ING):
  Expression: DATA
  Context: (STRING-UPCASE DATA)
  Parent: (DEFMETHOD PROCESS-DATA ((DATA STRING) &KEY) (STRING-UPCASE DATA))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (DEFMETHOD PROCESS-DATA :AFTER
                         ((DATA STRING) &KEY (LOG-LEVEL :INFO))
                (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA)))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFMETHOD
  Context: (DEFMETHOD PROCESS-DATA :AFTER
                      ((DATA STRING) &KEY (LOG-LEVEL :INFO))
             (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA)))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: PROCESS-DATA
  Context: (DEFMETHOD PROCESS-DATA :AFTER
                      ((DATA STRING) &KEY (LOG-LEVEL :INFO))
             (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA)))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: :AFTER
  Context: (DEFMETHOD PROCESS-DATA :AFTER
                      ((DATA STRING) &KEY (LOG-LEVEL :INFO))
             (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA)))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: ((DATA STRING) &KEY (LOG-LEVEL :INFO))
  Context: (DEFMETHOD PROCESS-DATA :AFTER
                      ((DATA STRING) &KEY (LOG-LEVEL :INFO))
             (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA)))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (DATA STRING)
  Context: ((DATA STRING) &KEY (LOG-LEVEL :INFO))
  Parent: (DEFMETHOD PROCESS-DATA :AFTER ((DATA STRING) &KEY (LOG-LEVEL :INFO))
            (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA)))
  Depth: 2
WALK(ING):
  Expression: DATA
  Context: (DATA STRING)
  Parent: ((DATA STRING) &KEY (LOG-LEVEL :INFO))
  Depth: 3
WALK(ING):
  Expression: STRING
  Context: (DATA STRING)
  Parent: ((DATA STRING) &KEY (LOG-LEVEL :INFO))
  Depth: 3
WALK(ING):
  Expression: &KEY
  Context: ((DATA STRING) &KEY (LOG-LEVEL :INFO))
  Parent: (DEFMETHOD PROCESS-DATA :AFTER ((DATA STRING) &KEY (LOG-LEVEL :INFO))
            (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA)))
  Depth: 2
WALK(ING):
  Expression: (LOG-LEVEL :INFO)
  Context: ((DATA STRING) &KEY (LOG-LEVEL :INFO))
  Parent: (DEFMETHOD PROCESS-DATA :AFTER ((DATA STRING) &KEY (LOG-LEVEL :INFO))
            (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA)))
  Depth: 2
WALK(ING):
  Expression: LOG-LEVEL
  Context: (LOG-LEVEL :INFO)
  Parent: ((DATA STRING) &KEY (LOG-LEVEL :INFO))
  Depth: 3
WALK(ING):
  Expression: :INFO
  Context: (LOG-LEVEL :INFO)
  Parent: ((DATA STRING) &KEY (LOG-LEVEL :INFO))
  Depth: 3
WALK(ING):
  Expression: (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA))
  Context: (DEFMETHOD PROCESS-DATA :AFTER
                      ((DATA STRING) &KEY (LOG-LEVEL :INFO))
             (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA)))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: WHEN
  Context: (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA))
  Parent: (DEFMETHOD PROCESS-DATA :AFTER ((DATA STRING) &KEY (LOG-LEVEL :INFO))
            (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA)))
  Depth: 2
WALK(ING):
  Expression: (EQ LOG-LEVEL :INFO)
  Context: (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA))
  Parent: (DEFMETHOD PROCESS-DATA :AFTER ((DATA STRING) &KEY (LOG-LEVEL :INFO))
            (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA)))
  Depth: 2
WALK(ING):
  Expression: EQ
  Context: (EQ LOG-LEVEL :INFO)
  Parent: (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA))
  Depth: 3
WALK(ING):
  Expression: LOG-LEVEL
  Context: (EQ LOG-LEVEL :INFO)
  Parent: (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA))
  Depth: 3
WALK(ING):
  Expression: :INFO
  Context: (EQ LOG-LEVEL :INFO)
  Parent: (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA))
  Depth: 3
WALK(ING):
  Expression: (FORMAT NIL "LOG: ~A" DATA)
  Context: (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA))
  Parent: (DEFMETHOD PROCESS-DATA :AFTER ((DATA STRING) &KEY (LOG-LEVEL :INFO))
            (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA)))
  Depth: 2
WALK(ING):
  Expression: FORMAT
  Context: (FORMAT NIL "LOG: ~A" DATA)
  Parent: (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA))
  Depth: 3
WALK(ING):
  Expression: NIL
  Context: (FORMAT NIL "LOG: ~A" DATA)
  Parent: (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA))
  Depth: 3
WALK(ING):
  Expression: "LOG: ~A"
  Context: (FORMAT NIL "LOG: ~A" DATA)
  Parent: (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA))
  Depth: 3
WALK(ING):
  Expression: DATA
  Context: (FORMAT NIL "LOG: ~A" DATA)
  Parent: (WHEN (EQ LOG-LEVEL :INFO) (FORMAT NIL "LOG: ~A" DATA))
  Depth: 3

-------------------------------
WALK(ING):
  Expression: (DEFMETHOD PROCESS-DATA ((DATA NUMBER) &KEY) (1+ DATA))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFMETHOD
  Context: (DEFMETHOD PROCESS-DATA ((DATA NUMBER) &KEY) (1+ DATA))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: PROCESS-DATA
  Context: (DEFMETHOD PROCESS-DATA ((DATA NUMBER) &KEY) (1+ DATA))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: ((DATA NUMBER) &KEY)
  Context: (DEFMETHOD PROCESS-DATA ((DATA NUMBER) &KEY) (1+ DATA))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (DATA NUMBER)
  Context: ((DATA NUMBER) &KEY)
  Parent: (DEFMETHOD PROCESS-DATA ((DATA NUMBER) &KEY) (1+ DATA))
  Depth: 2
WALK(ING):
  Expression: DATA
  Context: (DATA NUMBER)
  Parent: ((DATA NUMBER) &KEY)
  Depth: 3
WALK(ING):
  Expression: NUMBER
  Context: (DATA NUMBER)
  Parent: ((DATA NUMBER) &KEY)
  Depth: 3
WALK(ING):
  Expression: &KEY
  Context: ((DATA NUMBER) &KEY)
  Parent: (DEFMETHOD PROCESS-DATA ((DATA NUMBER) &KEY) (1+ DATA))
  Depth: 2
WALK(ING):
  Expression: (1+ DATA)
  Context: (DEFMETHOD PROCESS-DATA ((DATA NUMBER) &KEY) (1+ DATA))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: 1+
  Context: (1+ DATA)
  Parent: (DEFMETHOD PROCESS-DATA ((DATA NUMBER) &KEY) (1+ DATA))
  Depth: 2
WALK(ING):
  Expression: DATA
  Context: (1+ DATA)
  Parent: (DEFMETHOD PROCESS-DATA ((DATA NUMBER) &KEY) (1+ DATA))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (DEFMACRO DEFMACRO-NAME () 0)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFMACRO
  Context: (DEFMACRO DEFMACRO-NAME () 0)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: DEFMACRO-NAME
  Context: (DEFMACRO DEFMACRO-NAME () 0)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: NIL
  Context: (DEFMACRO DEFMACRO-NAME () 0)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: 0
  Context: (DEFMACRO DEFMACRO-NAME () 0)
  Parent: NIL
  Depth: 1

-------------------------------
WALK(ING):
  Expression: (SETF (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
                      (LAMBDA (FORM ENV) FORM ENV 0))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: SETF
  Context: (SETF (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
                   (LAMBDA (FORM ENV) FORM ENV 0))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
  Context: (SETF (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
                   (LAMBDA (FORM ENV) FORM ENV 0))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: MACRO-FUNCTION
  Context: (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
  Parent: (SETF (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
                  (LAMBDA (FORM ENV) FORM ENV 0))
  Depth: 2
WALK(ING):
  Expression: 'MACRO-FUNCTION-NAME
  Context: (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
  Parent: (SETF (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
                  (LAMBDA (FORM ENV) FORM ENV 0))
  Depth: 2
WALK(ING):
  Expression: QUOTE
  Context: 'MACRO-FUNCTION-NAME
  Parent: (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
  Depth: 3
WALK(ING):
  Expression: MACRO-FUNCTION-NAME
  Context: 'MACRO-FUNCTION-NAME
  Parent: (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
  Depth: 3
WALK(ING):
  Expression: (LAMBDA (FORM ENV) FORM ENV 0)
  Context: (SETF (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
                   (LAMBDA (FORM ENV) FORM ENV 0))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: LAMBDA
  Context: (LAMBDA (FORM ENV) FORM ENV 0)
  Parent: (SETF (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
                  (LAMBDA (FORM ENV) FORM ENV 0))
  Depth: 2
WALK(ING):
  Expression: (FORM ENV)
  Context: (LAMBDA (FORM ENV) FORM ENV 0)
  Parent: (SETF (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
                  (LAMBDA (FORM ENV) FORM ENV 0))
  Depth: 2
WALK(ING):
  Expression: FORM
  Context: (FORM ENV)
  Parent: (LAMBDA (FORM ENV) FORM ENV 0)
  Depth: 3
WALK(ING):
  Expression: ENV
  Context: (FORM ENV)
  Parent: (LAMBDA (FORM ENV) FORM ENV 0)
  Depth: 3
WALK(ING):
  Expression: FORM
  Context: (LAMBDA (FORM ENV) FORM ENV 0)
  Parent: (SETF (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
                  (LAMBDA (FORM ENV) FORM ENV 0))
  Depth: 2
WALK(ING):
  Expression: ENV
  Context: (LAMBDA (FORM ENV) FORM ENV 0)
  Parent: (SETF (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
                  (LAMBDA (FORM ENV) FORM ENV 0))
  Depth: 2
WALK(ING):
  Expression: 0
  Context: (LAMBDA (FORM ENV) FORM ENV 0)
  Parent: (SETF (MACRO-FUNCTION 'MACRO-FUNCTION-NAME)
                  (LAMBDA (FORM ENV) FORM ENV 0))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (DEFINE-CONDITION CONDITION-NAME
                  NIL
                  NIL)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFINE-CONDITION
  Context: (DEFINE-CONDITION CONDITION-NAME
               NIL
               NIL)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: CONDITION-NAME
  Context: (DEFINE-CONDITION CONDITION-NAME
               NIL
               NIL)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: NIL
  Context: (DEFINE-CONDITION CONDITION-NAME
               NIL
               NIL)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: NIL
  Context: (DEFINE-CONDITION CONDITION-NAME
               NIL
               NIL)
  Parent: NIL
  Depth: 1


Reference Analysis Trace for d:/quicklisp/local-projects/test-project/source/single-pkg-refs.lisp

-------------------------------
WALK(ING):
  Expression: (IN-PACKAGE #:USER-MAIN-PACKAGE)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: IN-PACKAGE
  Context: (IN-PACKAGE #:USER-MAIN-PACKAGE)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: #:USER-MAIN-PACKAGE
  Context: (IN-PACKAGE #:USER-MAIN-PACKAGE)
  Parent: NIL
  Depth: 1

#<REFERENCE 
    :Name "USER-MAIN-PACKAGE"
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name "USER-MAIN-PACKAGE"
                        :Context (DEFPACKAGE #:USER-MAIN-PACKAGE
                                   (:USE :CL))
                        :Type :PACKAGE
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
                        :Exported-p T
>

-------------------------------
WALK(ING):
  Expression: *DEFVAR-VARIABLE*
  Context: NIL
  Parent: NIL
  Depth: 0

#<REFERENCE 
    :Name *DEFVAR-VARIABLE*
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name *DEFVAR-VARIABLE*
                        :Context (DEFVAR *DEFVAR-VARIABLE* 0)
                        :Type :VARIABLE
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
                    DEFINITION>
                        :Name *DEFVAR-VARIABLE*
                        :Context (DEFVAR *DEFVAR-VARIABLE*
                                   (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0))
                        :Type :VARIABLE
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>

-------------------------------
WALK(ING):
  Expression: *DEFPARAMETER-VARIABLE*
  Context: NIL
  Parent: NIL
  Depth: 0

#<REFERENCE 
    :Name *DEFPARAMETER-VARIABLE*
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name *DEFPARAMETER-VARIABLE*
                        :Context (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0)
                        :Type :VARIABLE
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>

-------------------------------
WALK(ING):
  Expression: +DEFCONSTANT-VARIABLE+
  Context: NIL
  Parent: NIL
  Depth: 0

#<REFERENCE 
    :Name +DEFCONSTANT-VARIABLE+
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name +DEFCONSTANT-VARIABLE+
                        :Context (DEFCONSTANT +DEFCONSTANT-VARIABLE+ "aeiou")
                        :Type :VARIABLE
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>

-------------------------------
WALK(ING):
  Expression: *SYMBOL-VALUE-VARIABLE*
  Context: NIL
  Parent: NIL
  Depth: 0

#<REFERENCE 
    :Name *SYMBOL-VALUE-VARIABLE*
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name *SYMBOL-VALUE-VARIABLE*
                        :Type :VARIABLE
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>

-------------------------------
WALK(ING):
  Expression: (DEFUN-NAME)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFUN-NAME
  Context: (DEFUN-NAME)
  Parent: NIL
  Depth: 1

#<REFERENCE 
    :Name DEFUN-NAME
    :Context (DEFUN-NAME)
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name DEFUN-NAME
                        :Type :FUNCTION
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>

-------------------------------
WALK(ING):
  Expression: (FUNCALL 'SYMBOL-FUNCTION-NAME)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: FUNCALL
  Context: (FUNCALL 'SYMBOL-FUNCTION-NAME)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: 'SYMBOL-FUNCTION-NAME
  Context: (FUNCALL 'SYMBOL-FUNCTION-NAME)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: QUOTE
  Context: 'SYMBOL-FUNCTION-NAME
  Parent: (FUNCALL 'SYMBOL-FUNCTION-NAME)
  Depth: 2
WALK(ING):
  Expression: SYMBOL-FUNCTION-NAME
  Context: 'SYMBOL-FUNCTION-NAME
  Parent: (FUNCALL 'SYMBOL-FUNCTION-NAME)
  Depth: 2

#<REFERENCE 
    :Name SYMBOL-FUNCTION-NAME
    :Context 'SYMBOL-FUNCTION-NAME
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name SYMBOL-FUNCTION-NAME
                        :Type :FUNCTION
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>

-------------------------------
WALK(ING):
  Expression: (FUNCALL 'FDEFINITION-FUNCTION-NAME)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: FUNCALL
  Context: (FUNCALL 'FDEFINITION-FUNCTION-NAME)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: 'FDEFINITION-FUNCTION-NAME
  Context: (FUNCALL 'FDEFINITION-FUNCTION-NAME)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: QUOTE
  Context: 'FDEFINITION-FUNCTION-NAME
  Parent: (FUNCALL 'FDEFINITION-FUNCTION-NAME)
  Depth: 2
WALK(ING):
  Expression: FDEFINITION-FUNCTION-NAME
  Context: 'FDEFINITION-FUNCTION-NAME
  Parent: (FUNCALL 'FDEFINITION-FUNCTION-NAME)
  Depth: 2

#<REFERENCE 
    :Name FDEFINITION-FUNCTION-NAME
    :Context 'FDEFINITION-FUNCTION-NAME
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name FDEFINITION-FUNCTION-NAME
                        :Type :FUNCTION
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>

-------------------------------
WALK(ING):
  Expression: (CIRCLE-RADIUS (MAKE-CIRCLE))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: CIRCLE-RADIUS
  Context: (CIRCLE-RADIUS (MAKE-CIRCLE))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (MAKE-CIRCLE)
  Context: (CIRCLE-RADIUS (MAKE-CIRCLE))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: MAKE-CIRCLE
  Context: (MAKE-CIRCLE)
  Parent: (CIRCLE-RADIUS (MAKE-CIRCLE))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (PERSON.AGE (MAKE-PERSON))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: PERSON.AGE
  Context: (PERSON.AGE (MAKE-PERSON))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (MAKE-PERSON)
  Context: (PERSON.AGE (MAKE-PERSON))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: MAKE-PERSON
  Context: (MAKE-PERSON)
  Parent: (PERSON.AGE (MAKE-PERSON))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (FUNCALL #'COMPUTE-AREA (MAKE-CIRCLE :RADIUS 1))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: FUNCALL
  Context: (FUNCALL #'COMPUTE-AREA (MAKE-CIRCLE :RADIUS 1))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: #'COMPUTE-AREA
  Context: (FUNCALL #'COMPUTE-AREA (MAKE-CIRCLE :RADIUS 1))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: FUNCTION
  Context: #'COMPUTE-AREA
  Parent: (FUNCALL #'COMPUTE-AREA (MAKE-CIRCLE :RADIUS 1))
  Depth: 2
WALK(ING):
  Expression: COMPUTE-AREA
  Context: #'COMPUTE-AREA
  Parent: (FUNCALL #'COMPUTE-AREA (MAKE-CIRCLE :RADIUS 1))
  Depth: 2

#<REFERENCE 
    :Name COMPUTE-AREA
    :Context #'COMPUTE-AREA
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name COMPUTE-AREA
                        :Type :METHOD
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
                    DEFINITION>
                        :Name COMPUTE-AREA
                        :Type :GENERIC-FUNCTION
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>
WALK(ING):
  Expression: (MAKE-CIRCLE :RADIUS 1)
  Context: (FUNCALL #'COMPUTE-AREA (MAKE-CIRCLE :RADIUS 1))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: MAKE-CIRCLE
  Context: (MAKE-CIRCLE :RADIUS 1)
  Parent: (FUNCALL #'COMPUTE-AREA (MAKE-CIRCLE :RADIUS 1))
  Depth: 2
WALK(ING):
  Expression: :RADIUS
  Context: (MAKE-CIRCLE :RADIUS 1)
  Parent: (FUNCALL #'COMPUTE-AREA (MAKE-CIRCLE :RADIUS 1))
  Depth: 2
WALK(ING):
  Expression: 1
  Context: (MAKE-CIRCLE :RADIUS 1)
  Parent: (FUNCALL #'COMPUTE-AREA (MAKE-CIRCLE :RADIUS 1))
  Depth: 2

-------------------------------
WALK(ING):
  Expression: (PROCESS-DATA "test" :LOG-LEVEL :WARN)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: PROCESS-DATA
  Context: (PROCESS-DATA "test" :LOG-LEVEL :WARN)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: "test"
  Context: (PROCESS-DATA "test" :LOG-LEVEL :WARN)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: :LOG-LEVEL
  Context: (PROCESS-DATA "test" :LOG-LEVEL :WARN)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: :WARN
  Context: (PROCESS-DATA "test" :LOG-LEVEL :WARN)
  Parent: NIL
  Depth: 1

-------------------------------
WALK(ING):
  Expression: (PROCESS-DATA 42)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: PROCESS-DATA
  Context: (PROCESS-DATA 42)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: 42
  Context: (PROCESS-DATA 42)
  Parent: NIL
  Depth: 1

-------------------------------
WALK(ING):
  Expression: (DEFMACRO-NAME)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFMACRO-NAME
  Context: (DEFMACRO-NAME)
  Parent: NIL
  Depth: 1

#<REFERENCE 
    :Name DEFMACRO-NAME
    :Context (DEFMACRO-NAME)
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name DEFMACRO-NAME
                        :Type :MACRO
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>

-------------------------------
WALK(ING):
  Expression: (MACRO-FUNCTION-NAME)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: MACRO-FUNCTION-NAME
  Context: (MACRO-FUNCTION-NAME)
  Parent: NIL
  Depth: 1

#<REFERENCE 
    :Name MACRO-FUNCTION-NAME
    :Context (MACRO-FUNCTION-NAME)
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name MACRO-FUNCTION-NAME
                        :Type :MACRO
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>

-------------------------------
WALK(ING):
  Expression: (DEFUN FUNCTION-WITH-CONDITION () (ERROR 'CONDITION-NAME))
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFUN
  Context: (DEFUN FUNCTION-WITH-CONDITION () (ERROR 'CONDITION-NAME))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: FUNCTION-WITH-CONDITION
  Context: (DEFUN FUNCTION-WITH-CONDITION () (ERROR 'CONDITION-NAME))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: NIL
  Context: (DEFUN FUNCTION-WITH-CONDITION () (ERROR 'CONDITION-NAME))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (ERROR 'CONDITION-NAME)
  Context: (DEFUN FUNCTION-WITH-CONDITION () (ERROR 'CONDITION-NAME))
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: ERROR
  Context: (ERROR 'CONDITION-NAME)
  Parent: (DEFUN FUNCTION-WITH-CONDITION () (ERROR 'CONDITION-NAME))
  Depth: 2
WALK(ING):
  Expression: 'CONDITION-NAME
  Context: (ERROR 'CONDITION-NAME)
  Parent: (DEFUN FUNCTION-WITH-CONDITION () (ERROR 'CONDITION-NAME))
  Depth: 2
WALK(ING):
  Expression: QUOTE
  Context: 'CONDITION-NAME
  Parent: (ERROR 'CONDITION-NAME)
  Depth: 3
WALK(ING):
  Expression: CONDITION-NAME
  Context: 'CONDITION-NAME
  Parent: (ERROR 'CONDITION-NAME)
  Depth: 3

#<REFERENCE 
    :Name CONDITION-NAME
    :Context 'CONDITION-NAME
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name CONDITION-NAME
                        :Type :STRUCTURE/CLASS/CONDITION
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>

-------------------------------
WALK(ING):
  Expression: (DEFUN MY-FUNCTION (ARG) (DEFUN-NAME) *DEFVAR-VARIABLE* ARG)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: DEFUN
  Context: (DEFUN MY-FUNCTION (ARG) (DEFUN-NAME) *DEFVAR-VARIABLE* ARG)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: MY-FUNCTION
  Context: (DEFUN MY-FUNCTION (ARG) (DEFUN-NAME) *DEFVAR-VARIABLE* ARG)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (ARG)
  Context: (DEFUN MY-FUNCTION (ARG) (DEFUN-NAME) *DEFVAR-VARIABLE* ARG)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: ARG
  Context: (ARG)
  Parent: (DEFUN MY-FUNCTION (ARG) (DEFUN-NAME) *DEFVAR-VARIABLE* ARG)
  Depth: 2
WALK(ING):
  Expression: (DEFUN-NAME)
  Context: (DEFUN MY-FUNCTION (ARG) (DEFUN-NAME) *DEFVAR-VARIABLE* ARG)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: DEFUN-NAME
  Context: (DEFUN-NAME)
  Parent: (DEFUN MY-FUNCTION (ARG) (DEFUN-NAME) *DEFVAR-VARIABLE* ARG)
  Depth: 2

#<REFERENCE 
    :Name DEFUN-NAME
    :Context (DEFUN-NAME)
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name DEFUN-NAME
                        :Type :FUNCTION
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>
WALK(ING):
  Expression: *DEFVAR-VARIABLE*
  Context: (DEFUN MY-FUNCTION (ARG) (DEFUN-NAME) *DEFVAR-VARIABLE* ARG)
  Parent: NIL
  Depth: 1

#<REFERENCE 
    :Name *DEFVAR-VARIABLE*
    :Context (DEFUN MY-FUNCTION (ARG) (DEFUN-NAME) *DEFVAR-VARIABLE* ARG)
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name *DEFVAR-VARIABLE*
                        :Context (DEFVAR *DEFVAR-VARIABLE* 0)
                        :Type :VARIABLE
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
                    DEFINITION>
                        :Name *DEFVAR-VARIABLE*
                        :Context (DEFVAR *DEFVAR-VARIABLE*
                                   (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0))
                        :Type :VARIABLE
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>
WALK(ING):
  Expression: ARG
  Context: (DEFUN MY-FUNCTION (ARG) (DEFUN-NAME) *DEFVAR-VARIABLE* ARG)
  Parent: NIL
  Depth: 1

-------------------------------
WALK(ING):
  Expression: (LET ((ARG 0))
                (DEFUN-NAME)
                *DEFVAR-VARIABLE*
                (COMPUTE-AREA (MAKE-CIRCLE))
                ARG)
  Context: NIL
  Parent: NIL
  Depth: 0
WALK(ING):
  Expression: LET
  Context: (LET ((ARG 0))
             (DEFUN-NAME)
             *DEFVAR-VARIABLE*
             (COMPUTE-AREA (MAKE-CIRCLE))
             ARG)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: ((ARG 0))
  Context: (LET ((ARG 0))
             (DEFUN-NAME)
             *DEFVAR-VARIABLE*
             (COMPUTE-AREA (MAKE-CIRCLE))
             ARG)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: (ARG 0)
  Context: ((ARG 0))
  Parent: (LET ((ARG 0))
            (DEFUN-NAME)
            *DEFVAR-VARIABLE*
            (COMPUTE-AREA (MAKE-CIRCLE))
            ARG)
  Depth: 2
WALK(ING):
  Expression: ARG
  Context: (ARG 0)
  Parent: ((ARG 0))
  Depth: 3
WALK(ING):
  Expression: 0
  Context: (ARG 0)
  Parent: ((ARG 0))
  Depth: 3
WALK(ING):
  Expression: (DEFUN-NAME)
  Context: (LET ((ARG 0))
             (DEFUN-NAME)
             *DEFVAR-VARIABLE*
             (COMPUTE-AREA (MAKE-CIRCLE))
             ARG)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: DEFUN-NAME
  Context: (DEFUN-NAME)
  Parent: (LET ((ARG 0))
            (DEFUN-NAME)
            *DEFVAR-VARIABLE*
            (COMPUTE-AREA (MAKE-CIRCLE))
            ARG)
  Depth: 2

#<REFERENCE 
    :Name DEFUN-NAME
    :Context (DEFUN-NAME)
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name DEFUN-NAME
                        :Type :FUNCTION
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>
WALK(ING):
  Expression: *DEFVAR-VARIABLE*
  Context: (LET ((ARG 0))
             (DEFUN-NAME)
             *DEFVAR-VARIABLE*
             (COMPUTE-AREA (MAKE-CIRCLE))
             ARG)
  Parent: NIL
  Depth: 1

#<REFERENCE 
    :Name *DEFVAR-VARIABLE*
    :Context (LET ((ARG 0))
               (DEFUN-NAME)
               *DEFVAR-VARIABLE*
               (COMPUTE-AREA (MAKE-CIRCLE ...))
               ARG
               ...)
    :File /source/single-pkg-refs.lisp
    :Package "USER-MAIN-PACKAGE"
    :Visibility LOCAL
    :Definitions
                    DEFINITION>
                        :Name *DEFVAR-VARIABLE*
                        :Context (DEFVAR *DEFVAR-VARIABLE* 0)
                        :Type :VARIABLE
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
                    DEFINITION>
                        :Name *DEFVAR-VARIABLE*
                        :Context (DEFVAR *DEFVAR-VARIABLE*
                                   (DEFPARAMETER *DEFPARAMETER-VARIABLE* 0))
                        :Type :VARIABLE
                        :File /source/single-pkg-defs.lisp
                        :Package "USER-MAIN-PACKAGE"
>
WALK(ING):
  Expression: (COMPUTE-AREA (MAKE-CIRCLE))
  Context: (LET ((ARG 0))
             (DEFUN-NAME)
             *DEFVAR-VARIABLE*
             (COMPUTE-AREA (MAKE-CIRCLE))
             ARG)
  Parent: NIL
  Depth: 1
WALK(ING):
  Expression: COMPUTE-AREA
  Context: (COMPUTE-AREA (MAKE-CIRCLE))
  Parent: (LET ((ARG 0))
            (DEFUN-NAME)
            *DEFVAR-VARIABLE*
            (COMPUTE-AREA (MAKE-CIRCLE))
            ARG)
  Depth: 2
WALK(ING):
  Expression: (MAKE-CIRCLE)
  Context: (COMPUTE-AREA (MAKE-CIRCLE))
  Parent: (LET ((ARG 0))
            (DEFUN-NAME)
            *DEFVAR-VARIABLE*
            (COMPUTE-AREA (MAKE-CIRCLE))
            ARG)
  Depth: 2
WALK(ING):
  Expression: MAKE-CIRCLE
  Context: (MAKE-CIRCLE)
  Parent: (COMPUTE-AREA (MAKE-CIRCLE))
  Depth: 3
WALK(ING):
  Expression: ARG
  Context: (LET ((ARG 0))
             (DEFUN-NAME)
             *DEFVAR-VARIABLE*
             (COMPUTE-AREA (MAKE-CIRCLE))
             ARG)
  Parent: NIL
  Depth: 1

